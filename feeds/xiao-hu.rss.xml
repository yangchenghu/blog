<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>小虎的博客</title><link>http://blog.chenghu.me/</link><description></description><atom:link href="http://blog.chenghu.me/feeds/xiao-hu.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 23 Sep 2015 00:00:00 +0800</lastBuildDate><item><title>Setup L2TP And IPSEC VPN</title><link>http://blog.chenghu.me/setup-l2tp-and-ipsec-vpn.html</link><description>&lt;h1&gt;搭建L2TP和IPSEC的VPN&lt;/h1&gt;
&lt;p&gt;本来家里用的长城宽带，结果通过IP138一看，居然是“鹏博士宽带”&lt;/p&gt;
&lt;p&gt;这个碉堡了的鹏博士屏蔽各种梯子&lt;/p&gt;
&lt;p&gt;之前在东京的一个梯子，只要一ssh过去，梯子就消失了，ping都ping不通&lt;/p&gt;
&lt;p&gt;最后只好把梯子搬到了法国，延时直接翻倍了，悲剧&lt;/p&gt;
&lt;p&gt;最近发现拨公司的L2TP很流畅，就想在梯子上搭建一个L2TP&lt;/p&gt;
&lt;p&gt;搜了一下，找到一个比较便捷的方法&lt;/p&gt;
&lt;p&gt;在github上找到一个&lt;a href="https://github.com/philplckthun/setup-simple-ipsec-l2tp-vpn"&gt;脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按操作走&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://raw.github.com/philplckthun/setup-simple-ipsec-l2tp-vpn/master/setup.sh
sudo sh setup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;按提示一步一步的设置PSK,Username,Password。&lt;/p&gt;
&lt;p&gt;结果提示&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/bin/bash: xmlto: commad not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="http://yimagecache.qiniudn.com/67WIP9PO=0/H$PHA{VC2C$7.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;好吧，只好&lt;code&gt;apt-get install xmlto&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结果一看&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="http://yimagecache.qiniudn.com/afzicouvyofadkhqjhrklnfaldkhafquvopcuyv.png" /&gt;&lt;/p&gt;
&lt;p&gt;要占1G多硬盘，有点坑啊，果断点&lt;code&gt;n&lt;/code&gt;啊&lt;/p&gt;
&lt;p&gt;那就自己搞了&lt;/p&gt;
&lt;p&gt;自己用&lt;code&gt;apt-get install openwan&lt;/code&gt;来安装&lt;code&gt;openwan&lt;/code&gt;实现ipsec&lt;/p&gt;
&lt;p&gt;结果还是遇到了自己之前一直卡住的问题&lt;/p&gt;
&lt;p&gt;就是在使用&lt;code&gt;sudo ipsec verify&lt;/code&gt;的时候总是有一项过不去检测&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Two or more interfaces found, checking IP forwarding [failed]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;继续google&lt;/p&gt;
&lt;p&gt;找到豆瓣小组上一个&lt;a href="http://www.douban.com/note/266076883/"&gt;帖子&lt;/a&gt;，说自己重新编译一下&lt;code&gt;opnwan&lt;/code&gt;就好了&lt;/p&gt;
&lt;p&gt;好吧，继续笔记&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /usr/src
wget http://www.openswan.org/download/openswan-2.6.43.1.tar.gz
tar xf openswan-2.6.43.1.tar.gz
cd openswan-2.6.43.1
make programs
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再&lt;code&gt;ipsec verify&lt;/code&gt;，结果。。。。。又有问题&lt;/p&gt;
&lt;p&gt;&lt;img alt="image3" src="http://yimagecache.qiniudn.com/openwanerrortip.png" /&gt;&lt;/p&gt;
&lt;p&gt;中间搞了iptables好多次，重启了n次&lt;/p&gt;
&lt;p&gt;想想中间两个&lt;code&gt;NOT IMPLEMENTED&lt;/code&gt;实在搞不了&lt;/p&gt;
&lt;p&gt;再重启一遍吧&lt;/p&gt;
&lt;p&gt;电脑连接了一下，居然成功了&lt;/p&gt;
&lt;p&gt;去ip138看了一下，也出去了&lt;/p&gt;
&lt;p&gt;回家看看能不能穿越鹏博士&lt;/p&gt;
&lt;p&gt;备份：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service ipsec-assist stop
sudo service ipsec-assist start
sudo service ipsec-assist restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回家更新：&lt;/p&gt;
&lt;p&gt;好吧，在强大的鹏博士面前，所有梯子都是渣，只有局域网，没有互联网&lt;/p&gt;
&lt;p&gt;L2TP  .........  找不到服务器
SSH隧道  .........  没反应
shadowsocks  ..........  卡到死
Anyconnect  ..........  连上就断开&lt;/p&gt;
&lt;p&gt;刚找了一个手机上的&lt;/p&gt;
&lt;p&gt;天行vpn  ..........  找不到服务器
shadowsocks  .........  卡到爆&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;下期预告：&lt;/p&gt;
&lt;p&gt;之前用&lt;code&gt;docker-ocserv&lt;/code&gt;搭建的ocserv服务器这几天老自动断开连接，而且上不了instagram，还是自己重新搭建一下吧。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Wed, 23 Sep 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-09-23:setup-l2tp-and-ipsec-vpn.html</guid><category>l2tp</category><category>ipsec</category><category>vpn</category></item><item><title>Git operation</title><link>http://blog.chenghu.me/git-operation.html</link><description>&lt;h1&gt;Git 操作&lt;/h1&gt;
&lt;p&gt;最近使用git比较多，记录几个常见点git的相关操作&lt;/p&gt;
&lt;p&gt;1.遇到了一次代码冲突&lt;/p&gt;
&lt;p&gt;error: Your local changes to the following files would be overwritten by merge:
        projectpath/xxxxx.xcodeproj/project.pbxproj
Please, commit your changes or stash them before you can merge.&lt;/p&gt;
&lt;p&gt;找了一下，说是代码冲突了，我的修改也不能忽略，那怎么搞&lt;/p&gt;
&lt;p&gt;git stash
git pull
git stash pop&lt;/p&gt;
&lt;p&gt;这样就保留了本地的修改，然后去处理冲突了&lt;/p&gt;
&lt;p&gt;2.放弃本地处理&lt;/p&gt;
&lt;p&gt;在当前代码上调bug，加了好多测试代码，如果丢弃本地的这些修改呢？&lt;/p&gt;
&lt;p&gt;git reset --hard
git pull&lt;/p&gt;
&lt;p&gt;这样就将本地的修改清除了&lt;/p&gt;
&lt;p&gt;3.撤销一次commit&lt;/p&gt;
&lt;p&gt;在提交代码的时候，误将一个图片压缩包提交进去了。赶紧删除掉，再commit一次，结果git push的时候，上一次的commit还是要提交到服务器的，我去100+M的图片压缩包要上到服务器，以后team成员更新的时候都要先拉这个图片包，而且每个人的本地仓库也包含这个压缩包，想想就恐怖。&lt;/p&gt;
&lt;p&gt;怎么撤销commit呢&lt;/p&gt;
&lt;p&gt;可以使用git log 查看commit日志&lt;/p&gt;
&lt;p&gt;commit e84fd9b2c3e027a9f8a95af770fdfef9c99224df
Merge: 47cd9d1 e57c182
Author: 
Date:   Fri Aug 7 18:44:23 2015 +0800&lt;/p&gt;
&lt;p&gt;commit 47cd9d1d42eb9b2fbea6ec06cdfa358b8e5fcded
Author: 
Date:   Fri Aug 7 18:43:55 2015 +0800&lt;/p&gt;
&lt;p&gt;commit e57c1822b3d8359500496257a506c9fdf259adb1
Author: 
Date:   Fri Aug 7 18:35:24 2015 +0800&lt;/p&gt;
&lt;p&gt;确定要撤销哪一次commit，找到相应的commit ID&lt;/p&gt;
&lt;p&gt;执行 &lt;/p&gt;
&lt;p&gt;git reset --hard commit ID&lt;/p&gt;
&lt;p&gt;git push origin HEAD --force&lt;/p&gt;
&lt;p&gt;就可以了&lt;/p&gt;
&lt;p&gt;当然，更详细的操作可以参见下面的链接&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bootcss.com/p/git-guide/"&gt;git - 简易指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;几个速成教程&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Mark24Code/15minGit"&gt;15分钟学会使用Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qinjx/30min_guides/blob/master/ios.md"&gt;iOS开发60分钟入门&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Sat, 08 Aug 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-08-08:git-operation.html</guid><category>Git</category></item><item><title>Objective-C Selector Methods</title><link>http://blog.chenghu.me/objective-c-selector-methods.html</link><description>&lt;h1&gt;在Objective-C中对Selector的操作&lt;/h1&gt;
&lt;p&gt;今天调试程序中的一个bug，iOS6版本系统中使用&lt;code&gt;NSUserDefaults&lt;/code&gt;类的&lt;code&gt;initWithSuiteName&lt;/code&gt;方法会crash&lt;/p&gt;
&lt;p&gt;想起来可以判断&lt;code&gt;NSUserDefaults&lt;/code&gt;是否响应&lt;code&gt;initWithSuiteName&lt;/code&gt;这个方法来不同调用。&lt;/p&gt;
&lt;p&gt;使用了&lt;code&gt;respondsToSelector&lt;/code&gt;这个类方法，以为没有问题，结果没有进入这个if里面，居然判断失败了&lt;/p&gt;
&lt;p&gt;好吧，那就把关于Selector的所有的方法都整理一下，以免以后再使用错误了。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;+(BOOL)respondsToSelector:(SEL)aSelector;&lt;/p&gt;
&lt;p&gt;判断该类是否响应类方法。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;-(BOOL)respondsToSelector:(SEL)aSelector;&lt;/p&gt;
&lt;p&gt;判断实例是否响应该方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;userDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;userDefault&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;objectForKey&lt;/span&gt;&lt;span class="p"&gt;:)]){&lt;/span&gt;
    &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;+(BOOL)instancesRespondToSelector:(SEL)aSelector;&lt;/p&gt;
&lt;p&gt;判断该类的实例是否响应该方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="nl"&gt;instancesRespondToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;initWithSuiteName&lt;/span&gt;&lt;span class="p"&gt;:)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;+(IMP)instanceMethodForSelector:(SEL)aSelector&lt;/p&gt;
&lt;p&gt;获取该类的实例方法的IMP实现的地址&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;IMP&lt;/span&gt; &lt;span class="n"&gt;kIMPForUserDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="nl"&gt;instanceMethodForSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;initWithUser&lt;/span&gt;&lt;span class="p"&gt;:)];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;+(BOOL)resolveInstanceMethod:(SEL)aSelector&lt;/p&gt;
&lt;hr /&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Sun, 26 Apr 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-04-26:objective-c-selector-methods.html</guid><category>Objective-C</category><category>Selector</category></item><item><title>Add Shell Alias</title><link>http://blog.chenghu.me/add-shell-alias.html</link><description>&lt;h1&gt;在Mac下使用Shell的Aliax&lt;/h1&gt;
&lt;p&gt;今天使用&lt;code&gt;pod update&lt;/code&gt;更新所有框架，好慢好慢&lt;/p&gt;
&lt;p&gt;搜了一下，可以使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pod install --verbose --no-repo-update
pod update --verbose --no-repo-update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来更新工程中的框架，而不更新pod库&lt;/p&gt;
&lt;p&gt;试了一下，好一些了&lt;/p&gt;
&lt;p&gt;但是命令好长，记不住&lt;/p&gt;
&lt;p&gt;想起来在linux中可以设置alias&lt;/p&gt;
&lt;p&gt;就找了一下，如何在Mac中设置alias，找了一篇&lt;a href="http://blog.csdn.net/ithomer/article/details/33339071"&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;试了一下，可以使用，记录如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编辑&lt;code&gt;~/.bash_profile&lt;/code&gt;这个文件&lt;code&gt;vim ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;插入&lt;code&gt;alias podinstallfast="pod install --verbose --no-repo-update"&lt;/code&gt;和&lt;code&gt;alias podupdatefast="pod update --verbose --no-repo-update"&lt;/code&gt;这两行&lt;/li&gt;
&lt;li&gt;保存文件&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;source ~/.bash_profile&lt;/code&gt;来让bash重新载入配置，就可以使用&lt;code&gt;podinstallfast&lt;/code&gt;或&lt;code&gt;podupdatefast&lt;/code&gt;来快速更新&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;over&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Wed, 25 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-25:add-shell-alias.html</guid><category>Shell</category><category>Alias</category></item><item><title>Add Shell Alias on mac</title><link>http://blog.chenghu.me/add-shell-alias-on-mac.html</link><description>&lt;h1&gt;在Mac下使用Shell的Aliax&lt;/h1&gt;
&lt;p&gt;over&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Wed, 25 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-25:add-shell-alias-on-mac.html</guid><category>Shell</category><category>Alias</category></item><item><title>iOS Anti Fildder Capture Https Data</title><link>http://blog.chenghu.me/ios-anti-fildder-capture-https-data.html</link><description>&lt;p&gt;Connect Anti Fiddler Captuer
Tags: iOS,Https,SSL,Fiddler,Capture
Category: Tech&lt;/p&gt;
&lt;h1&gt;iOS https内容防止fiddler抓包&lt;/h1&gt;
&lt;p&gt;昨天老板给提了一个bug&lt;/p&gt;
&lt;p&gt;“你的App虽然走了https来防止抓包，但是通过Fiddler还是可以进行中间人攻击，能不能解决？”&lt;/p&gt;
&lt;p&gt;老板的需求能不解决＝。＝，开玩笑了&lt;/p&gt;
&lt;p&gt;今天开始找资料&lt;/p&gt;
&lt;p&gt;我所有的网络请求都是走的AFNetworking，找到很多AFNetworking使用&lt;code&gt;AFSecurityPolicy&lt;/code&gt;来进行证书验证的文档。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ceyang.me/an-quan-lian-jie/"&gt;HTTP请求的安全连接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章主要讲导入证书，然后去比较&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/koujiaonuhan/p/ssl-pinning-with-afnetworking-2x.html"&gt;AFNetworking 2.x 的SSL身份认证&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章也是走的导入公钥进行比对&lt;/p&gt;
&lt;p&gt;&lt;a href="http://oncenote.com/2014/10/21/Security-1-HTTPS/"&gt;iOS安全系列之一：HTTPS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章讲了验证的步骤
 1. 验证的信任对象
 2. 使用系统默认验证方式验证Trust Object
 3. 使用Trust Object生成一份凭证
 4. 本地导入证书，验证Trust Object与导入的证书是否匹配
 5. 根据结果去continue还是cancel&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;看了几篇文章，发现主要是讲证书信息导入到&lt;code&gt;AFSecurityPolicy&lt;/code&gt;，然后将设置好的&lt;code&gt;AFSecurityPolicy&lt;/code&gt;设置到&lt;code&gt;AFHTTPRequestOperationManager&lt;/code&gt;的实例中，然后AFNetworking会自动处理。&lt;/p&gt;
&lt;p&gt;但是我的网络框架中没有使用默认的&lt;code&gt;AFHTTPRequestOperationManager&lt;/code&gt;来管理，使用的自己的&lt;code&gt;NSOperationQueue&lt;/code&gt;来组织的。&lt;/p&gt;
&lt;p&gt;后来想想&lt;code&gt;AFNetworking&lt;/code&gt;底层也是走的&lt;code&gt;NSURLConnicetion&lt;/code&gt;，那就研究一下&lt;code&gt;NSURLConnicetion&lt;/code&gt;对Https的处理。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;NSURLConnicetion&lt;/code&gt;的&lt;code&gt;- (void)connection:(NSURLConnection *)connection
willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge&lt;/code&gt;这个方法里。&lt;/p&gt;
&lt;p&gt;当然&lt;code&gt;AFNetworking&lt;/code&gt;里面的&lt;code&gt;AFHTTPRequestOperation&lt;/code&gt;有一个block&lt;code&gt;setWillSendRequestForAuthenticationChallengeBlock:^(NSURLConnection *connection, NSURLAuthenticationChallenge *challenge)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以，只要&lt;code&gt;NSURLConnicetion&lt;/code&gt;里面可以处理https证书就可以了。&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;先试试网上的方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//1)获取trust object&lt;/span&gt;
&lt;span class="n"&gt;SecTrustRef&lt;/span&gt; &lt;span class="n"&gt;trust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protectionSpace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;SecTrustResultType&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//注意：这里将之前导入的证书设置成下面验证的Trust Object的anchor certificate&lt;/span&gt;
&lt;span class="n"&gt;SecTrustSetAnchorCertificates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__bridge&lt;/span&gt; &lt;span class="n"&gt;CFArrayRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trustedCertificates&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//2)SecTrustEvaluate会查找前面SecTrustSetAnchorCertificates设置的证书或者系统默认提供的证书，对trust进行验证&lt;/span&gt;
&lt;span class="n"&gt;OSStatus&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustEvaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errSecSuccess&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultProceed&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultUnspecified&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;//3)验证成功，生成NSURLCredential凭证cred，告知challenge的sender使用这个凭证来继续连接&lt;/span&gt;
    &lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="nl"&gt;credentialForTrust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;useCredential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="nl"&gt;forAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;//5)验证失败，取消这次验证流程&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;cancelAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;结果还是可以用Fiddler来抓包，失败&lt;/p&gt;
&lt;p&gt;看来这种方式还是没有成功 ＝。＝&lt;/p&gt;
&lt;p&gt;继续&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;再尝试内置https公钥来处理，先想办法拿到公钥&lt;/p&gt;
&lt;p&gt;找了一下，找到一个链接，&lt;a href="http://stackoverflow.com/questions/16694280/ssl-pinning-on-ios"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;SecTrustRef&lt;/span&gt; &lt;span class="n"&gt;serverTrust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protectionSpace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;SecCertificateRef&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustGetCertificateAtIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="bp"&gt;NSData&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;remoteCertificateData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CFBridgingRelease&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SecCertificateCopyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;certificate&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;Remote Certificate Data Length: %ld&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;remoteCertificateData&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;strPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="nl"&gt;stringWithFormat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;%@/cer.cer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DOCUMENTS_PATH&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;remoteCertificateData&lt;/span&gt; &lt;span class="nl"&gt;writeToFile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;strPath&lt;/span&gt; &lt;span class="nl"&gt;atomically&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就将拿到的服务器的公钥写到本地了&lt;/p&gt;
&lt;p&gt;然后将这个证书内置到工程里&lt;/p&gt;
&lt;p&gt;依然在这个block里面做处理&lt;/p&gt;
&lt;p&gt;只要比对这两个证书是否一致就好了&lt;/p&gt;
&lt;p&gt;这次是可以了&lt;/p&gt;
&lt;p&gt;但是。。。。。。。老板说，咱们的https证书8月份就过期了，到时候公钥就变了，需要更新版本才可以，有没有不内置公钥的办法&lt;/p&gt;
&lt;p&gt;好吧，办法总比问题多，继续&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;尝试比对传过来的公钥的的CA&lt;/p&gt;
&lt;p&gt;找了一下，找到一个链接，&lt;a href="https://gist.github.com/JacksonTian/5855751"&gt;这里&lt;/a&gt;中的&lt;code&gt;验证证书&lt;/code&gt;段落。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_sslCACertificatieData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 根据二进制内容提取证书信息&lt;/span&gt;
    &lt;span class="n"&gt;SecCertificateRef&lt;/span&gt; &lt;span class="n"&gt;caRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecCertificateCreateWithData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__bridge&lt;/span&gt; &lt;span class="n"&gt;CFDataRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_sslCACertificatieData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// 形成钥匙链&lt;/span&gt;
    &lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;chain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="nl"&gt;arrayWithObject&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="k"&gt;__bridge&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;caRef&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

    &lt;span class="n"&gt;CFTypeRef&lt;/span&gt; &lt;span class="n"&gt;caChainArrayRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CFBridgingRetain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// 取出服务器证书&lt;/span&gt;
    &lt;span class="n"&gt;SecTrustRef&lt;/span&gt; &lt;span class="n"&gt;trust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt; &lt;span class="n"&gt;protectionSpace&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;SecTrustResultType&lt;/span&gt; &lt;span class="n"&gt;trustResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// 设置为我们自有的CA证书钥匙连&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustSetAnchorCertificates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caChainArrayRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;noErr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// 用CA证书验证服务器证书&lt;/span&gt;
        &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustEvaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;trustResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// 检查结果&lt;/span&gt;
    &lt;span class="kt"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;trusted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;noErr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;trustResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultProceed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trustResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultUnspecified&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trusted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//3)验证成功，生成NSURLCredential凭证cred，告知challenge的sender使用这个凭证来继续连接&lt;/span&gt;
        &lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="nl"&gt;credentialForTrust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;useCredential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="nl"&gt;forAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;cancelAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这次试了一下，也可以防止别人使用Fiddler抓包&lt;/p&gt;
&lt;p&gt;但是。。。。。老板说，是比内置公钥好多了，只要到时候不更换https证书的厂家的话，ca的有效期还是比较长的，能不能不内置CA，使用系统内置的CA来判断呢？&lt;/p&gt;
&lt;p&gt;好吧，想着办法总比问题多，继续搞&lt;/p&gt;
&lt;p&gt;加载CA的又一篇文章&lt;/p&gt;
&lt;p&gt;&lt;a href="http://robnapier.net/pinning-your-ssl-certs"&gt;Pinning Your SSL Certs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;那只能看看能不能读取出来公钥x509里面的信息来做判断了&lt;/p&gt;
&lt;p&gt;找了下，说可以加openssl的框架来验证x509证书&lt;/p&gt;
&lt;p&gt;看了几篇文档&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/15836484/how-to-verify-a-x509-certificate-in-c"&gt;How to verify a X509 certificate in C&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/8850524/seccertificateref-how-to-get-the-certificate-information"&gt;SecCertificateRef: How to get the certificate information?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/15438257/ios-verifying-a-file-with-a-certificate-and-signature-public-key-is-wrong-ve"&gt;iOS: Verifying a File With a Certificate and Signature - Public Key is Wrong, Verification Fails&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/6402442/iphone-development-verify-the-certificate-information-from-a-https-url"&gt;iphone development: verify the certificate information from a https url&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/wangsifu2009/article/details/6723267"&gt;Openssl 对x509证书有效性进行验证&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;暂时先用内嵌ca证书来解决对服务器x509证书的校验吧。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Wed, 18 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-18:ios-anti-fildder-capture-https-data.html</guid></item><item><title>Read From the programmer to project manager</title><link>http://blog.chenghu.me/read-from-the-programmer-to-project-manager.html</link><description>&lt;h1&gt;读《从程序员到项目经理》笔记&lt;/h1&gt;
&lt;h2&gt;从程序员到项目经理（一）&lt;/h2&gt;
&lt;p&gt;&lt;a href="从程序员到项目经理（一）"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么要当项目经理 － 职业晋升的一条渠道&lt;/li&gt;
&lt;li&gt;促进心智成熟&lt;/li&gt;
&lt;li&gt;项目管理知识可以通用到其他方面&lt;/li&gt;
&lt;li&gt;项目管理难就难在项目经理要改变自己，要学会跟人打交道&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;从程序员到项目经理（二）&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/watsonyin/archive/2012/09/16/2687873.html"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么是我 － 应为我更优秀一点&lt;/li&gt;
&lt;li&gt;光环效应 － 当我们对一个人某个方面有好的印象时，我们会倾向于认为他的其他方面也是好的&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;角色转换 － 本质上是思维转换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂时的不胜任不要紧，关键是要有进步。如果一个项目下来，除了很疲惫，你没有感觉到自己有一些积极的变化，那你的危机也要来了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目经理应该学会感恩。要成为优秀的项目经理，应该有好的心态，而感恩是一切好心态的基础。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;比较方面&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;技术思维&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;管理思维&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;关注中心&lt;/td&gt;
&lt;td&gt;以过程为中心的思维&lt;/td&gt;
&lt;td&gt;关心每项任务本身，而不是整体目标。不重视计划，对任务缺乏控制。&lt;/td&gt;
&lt;td&gt;以目标为中心的思维&lt;/td&gt;
&lt;td&gt;以终为始。关注整体目标、实现的路线、影响目标实现的因素、各种事件对目标的影响，区分重点。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;事物结构&lt;/td&gt;
&lt;td&gt;局部思维&lt;/td&gt;
&lt;td&gt;过于关注细节，对整个项目工作的内容、完成路线没有概念。上来就干，工作缺乏计划性、条理性。&lt;/td&gt;
&lt;td&gt;整体思维&lt;/td&gt;
&lt;td&gt;采用结构化分析方法，自顶向下，先整体后局部。有时亦采用头脑风暴，先将细节展开再归纳。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;逻辑思维&lt;/td&gt;
&lt;td&gt;以机器为中心的思维&lt;/td&gt;
&lt;td&gt;思想单纯，性格直率。在人际问题上过于讲究逻辑。&lt;/td&gt;
&lt;td&gt;以人为中心的思维&lt;/td&gt;
&lt;td&gt;人是执行项目的主体，关注事情本身，更关注人的价值。学会包容，能与各种不同情格的人打交道。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;决策依据&lt;/td&gt;
&lt;td&gt;完美思维&lt;/td&gt;
&lt;td&gt;不关心进度和成本，只关心完美的功能和代码，并视之为艺术。经常对上一任的工作推倒重来。&lt;/td&gt;
&lt;td&gt;平衡思维&lt;/td&gt;
&lt;td&gt;拒绝渡金，项目不需要艺术。在进度和质量之间取得平衡，在员工个性与团队凝聚力之间取得平衡，在员工、项目、公司和客户之间取得平衡。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;人际关系&lt;/td&gt;
&lt;td&gt;个人思维&lt;/td&gt;
&lt;td&gt;以个人为中心，单兵作战，依赖个人能力。个性固执，工作方法简单。&lt;/td&gt;
&lt;td&gt;团队思维&lt;/td&gt;
&lt;td&gt;你不是一个人在战斗，发挥每个成员的作用比个人埋头苦干重要得多。关注团队分工、配合以及士气和凝聚力。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h2&gt;从程序员到项目经理（三）：认识项目经理&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/watsonyin/archive/2012/09/25/2701483.html"&gt;地址&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Sat, 14 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-14:read-from-the-programmer-to-project-manager.html</guid><category>Programmer</category><category>PM</category></item><item><title>Fixed Linode Error</title><link>http://blog.chenghu.me/fixed-linode-error.html</link><description>&lt;h1&gt;修复Linode error&lt;/h1&gt;
&lt;p&gt;今天ss老是报错误&lt;code&gt;ERROR: remote_recv_cb_recv: Connection reset by peer&lt;/code&gt;，ssh上不去。&lt;/p&gt;
&lt;p&gt;就重启了一下Linode，结果就ssh过不去了，ss也没有好。悲剧了&lt;/p&gt;
&lt;p&gt;登录Linode后台，发现CPU老100%，不知道哪里的事情，关键ssh进不去，着急。&lt;/p&gt;
&lt;p&gt;没办法，只好写Ticket找技术人员帮忙。&lt;/p&gt;
&lt;p&gt;用蹩脚的英文描述了半天，对方实在不理解，总是几句标准客服回复，估计那边的技术还没上班，客服在扛着。&lt;/p&gt;
&lt;p&gt;看来只能自己动手了&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Dashboard&lt;/code&gt;中查找有用的东西&lt;/p&gt;
&lt;p&gt;看到&lt;code&gt;Remote access&lt;/code&gt;中发现了&lt;code&gt;Console Access&lt;/code&gt;点击发现是一个web版的console&lt;/p&gt;
&lt;p&gt;看到我前两天搭建的&lt;code&gt;ocserv&lt;/code&gt;在处理一个ca证书，然后就没有然后了，输入啥都不行&lt;/p&gt;
&lt;p&gt;看来是&lt;code&gt;ocserv&lt;/code&gt;出了问题，没办法，再找找吧&lt;/p&gt;
&lt;p&gt;看到一个&lt;code&gt;Rescue&lt;/code&gt;选项卡，进去还有一个&lt;code&gt;Reboot into Rescue Mode&lt;/code&gt;的按钮，看来是进安全模式&lt;/p&gt;
&lt;p&gt;那就试试呗&lt;/p&gt;
&lt;p&gt;进去后还是一个linux系统，但进了&lt;code&gt;/etc&lt;/code&gt;下查看&lt;code&gt;rc.local&lt;/code&gt;发现是一个干净的rc，不是我系统里的那个文件&lt;/p&gt;
&lt;p&gt;google 一下这个linux系统了&lt;code&gt;Finnix&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;刚好遇到一个10年的帖子，也是用&lt;code&gt;Finnix&lt;/code&gt;这个系统再linode中恢复数据，&lt;a href="http://www.chinaz.com/web/2010/1112/142756.shtml"&gt;帖子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看了下，大体了解了，原来这个&lt;code&gt;Finnix&lt;/code&gt;系统，就想Win下的PE系统，可以直接访问硬盘的文件，但是，需要先挂载硬盘&lt;/p&gt;
&lt;p&gt;那就好说了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /mnt/linode
mount /dev/xvda /mnt/linode
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后去修改&lt;code&gt;rc.local&lt;/code&gt;把，&lt;code&gt;ocserv&lt;/code&gt;启动行注释掉，保存，重启。&lt;/p&gt;
&lt;p&gt;在web console 中看到登录框，但在本地还是ssh不上去&lt;/p&gt;
&lt;p&gt;好吧，先在web console中输出一下iptables &lt;code&gt;sudo iptables -nL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;＝。＝&lt;/p&gt;
&lt;p&gt;原来Input链全部&lt;code&gt;DROP&lt;/code&gt;了&lt;/p&gt;
&lt;p&gt;改改改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;iptables -A INPUT -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后再ssh就通了&lt;/p&gt;
&lt;p&gt;然后去修改了启动默认加载的iptables ruls文件&lt;/p&gt;
&lt;p&gt;附&lt;/p&gt;
&lt;p&gt;ubuntu 的启动默认iptables导入的文件在&lt;code&gt;/etc/network/if-pre-up.d/iptables&lt;/code&gt;这个目录下，备忘。&lt;/p&gt;
&lt;p&gt;PS：&lt;/p&gt;
&lt;p&gt;后来还是启动了&lt;code&gt;ocserv&lt;/code&gt;，原来不是操作卡住了，只是这个程序运行起来只在输出状态，不能做输入操作。&lt;/p&gt;
&lt;p&gt;附加几个iptable操作的教程&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lesca.me/archives/iptables-architecture-commands-extensions.html"&gt;iptables入门：iptables构架、基本命令及扩展（功能）简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.51yip.com/linux/1404.html"&gt;iptables 添加，删除，查看，修改&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/test_me/article/details/5572195"&gt;iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://xiaozhuang.blog.51cto.com/4396589/874244"&gt;linux防火墙基础和管理设置iptables规则&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Fri, 13 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-13:fixed-linode-error.html</guid><category>Linode</category><category>Error</category></item><item><title>Kill Mac QQ Capture Function</title><link>http://blog.chenghu.me/kill-mac-qq-capture-function.html</link><description>&lt;h1&gt;干掉Mac QQ的自动截图程序&lt;/h1&gt;
&lt;p&gt;今天安装了Mac的企业QQ&lt;/p&gt;
&lt;p&gt;但在使用Mail的时候发现同时按&lt;code&gt;commond+control+a&lt;/code&gt;进行归档邮件的时候&lt;/p&gt;
&lt;p&gt;居然弹出QQ的截图程序，烦躁&lt;/p&gt;
&lt;p&gt;最讨厌其他程序抢占系统的快捷键，而且Mac本身的截图就很好用了&lt;/p&gt;
&lt;p&gt;准备搞掉Mac QQ的截图程序。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Activity Monitor&lt;/code&gt;中盲搜了一下&lt;code&gt;Capture&lt;/code&gt;，果然发现两个进程&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ScreenCaptureEIM
Image Capture Extension
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之前安装企业QQ的时候记得就叫EIM QQ&lt;/p&gt;
&lt;p&gt;好吧，那估计就是那个&lt;code&gt;ScreenCaptureEIM&lt;/code&gt;进程了，果断&lt;code&gt;kill&lt;/code&gt;掉，居然又启动了&lt;/p&gt;
&lt;p&gt;好吧，看来是加载了后台自启动，看一下&lt;code&gt;launchctl list&lt;/code&gt;，果然有&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;com.tencent.ScreenCaptureEIM
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;先关掉自启动吧&lt;code&gt;launchctl stop com.tencent.ScreenCaptureEIM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;Activity Monitor&lt;/code&gt;中看一下&lt;code&gt;ScreenCaptureEIM&lt;/code&gt;进程的信息，看到下面一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/Applications/EIM.app/Contents/Library/LoginItems/ScreenCaptureEIM.app/Contents/MacOS/ScreenCaptureEIM
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看来程序本体在&lt;code&gt;/Applications/EIM.app/Contents/Library/LoginItems/&lt;/code&gt;，进去删掉，然后kill掉进程，哈哈，一切都清净了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Fri, 13 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-13:kill-mac-qq-capture-function.html</guid><category>Mac</category><category>QQ</category><category>Capture</category></item><item><title>Fixed SVN did not show histoy Error</title><link>http://blog.chenghu.me/fixed-svn-did-not-show-histoy-error.html</link><description>&lt;h1&gt;修复SVN 不显示Timeline的bug&lt;/h1&gt;
&lt;p&gt;之前在Linode上搭建了Svn server&lt;br&gt;
但总是不能用客户端看到提交的Timeline&lt;br&gt;
郁闷&lt;br&gt;
今天决定搞掉这个bug&lt;br&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;Revert to Revision&lt;/code&gt;结果现实了 &lt;code&gt;Unreadable path encountered; access denied;&lt;/code&gt;这个错误。&lt;/p&gt;
&lt;p&gt;google了一下这个bug，找到一篇文章，&lt;a href="http://haitao.iteye.com/blog/1440066"&gt;原文在这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;发现是Server的配置出了问题。&lt;/p&gt;
&lt;p&gt;ssh上去找到SVN的目录下的&lt;code&gt;conf/svnserve.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;code&gt;anon-access = none&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后重启SVN Server就好了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Wed, 11 Mar 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-03-11:fixed-svn-did-not-show-histoy-error.html</guid><category>SVN</category><category>Error</category></item><item><title>Fixed Cocoapods Error</title><link>http://blog.chenghu.me/fixed-cocoapods-error.html</link><description>&lt;h1&gt;修复Cocoapods error&lt;/h1&gt;
&lt;p&gt;今天使用&lt;code&gt;pod update&lt;/code&gt;更新所有框架，结果提示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Update all pods
Analyzing dependencies
[!] There was an error reading &amp;#39;/Users/xxxxx/.cocoapods/repos/master/CocoaPods-version.yml&amp;#39;.
Please consult http://blog.cocoapods.org/Repairing-Our-Broken-Specs-Repository/ for more information.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找了好多方法，也试了好多
终于找到了原因
记录一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo rm -fr ~/.cocoapods/repos/master
sudo gem uninstall cocoapods
sudo gem update
sudo gem uninstall psych
sudo gem install psych -v 2.0.0
sudo gem instal cocoapods
pod setup
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就ok了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Sun, 15 Feb 2015 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2015-02-15:fixed-cocoapods-error.html</guid><category>Cocoapods</category><category>Error</category></item><item><title>Hook Reveal Regiest Alert</title><link>http://blog.chenghu.me/hook-reveal-regiest-alert.html</link><description>&lt;p&gt;之前写了  &lt;a href="http://www.yangch.info/?p=1230"&gt;“破解Reveal购买提示框”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近期发现 Reveal 更新到了1.0.6版本&lt;/p&gt;
&lt;p&gt;感觉每次都修改二进制文件，要计算位置，再去修改那个字节 都比较麻烦。&lt;/p&gt;
&lt;p&gt;在想在Mac平台上有没有像iOS下theos框架一样的hook的插件平台。&lt;/p&gt;
&lt;p&gt;后来想起来，theos也是用&lt;code&gt;runtime&lt;/code&gt;来动态替换了方法。&lt;/p&gt;
&lt;h2&gt;创建工程&lt;/h2&gt;
&lt;p&gt;在Xcode创建工程，选择&lt;code&gt;Library&lt;/code&gt;。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Tue, 21 Oct 2014 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2014-10-21:hook-reveal-regiest-alert.html</guid><category>Hook</category><category>Mac</category><category>Reveal</category></item><item><title>博客迁移(WP-&gt;Pelican)</title><link>http://blog.chenghu.me/bo-ke-qian-yi-wp-pelican.html</link><description>&lt;p&gt;今天心血来潮，想把自己在wordpress上的&lt;a href="http://www.yangch.info"&gt;博客&lt;/a&gt;迁移到刚刚用pelican在github上搭建好&lt;a href="http://blog.chenghu.me"&gt;新博客&lt;/a&gt;，折腾了一下午，记录了一下过程。&lt;/p&gt;
&lt;h2&gt;将博客文章从wordpress导出xml文件&lt;/h2&gt;
&lt;p&gt;进入wordpress后台，选择&lt;code&gt;工具&lt;/code&gt; -&amp;gt; &lt;code&gt;导出&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这里要注意的是，如果文章多，或者评论多的话，最好根据年份或者根据分类来导出文章，这样文件较小，后面各种处理都比较方便。&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;将博客里面的图片下载到本地&lt;/h2&gt;
&lt;p&gt;这里使用了&lt;a href="http://zoomquiet.io/"&gt;zoomquiet&lt;/a&gt;大妈的一个脚本（修改了两个地方：添加了异常处理，由于有些图片的地址已经失效，容易读取失败；添加了网络超时处理）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding=utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;

&lt;span class="c"&gt;# 打开RSS文件读取内容&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;wordpress.2014.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 用正则从RSS中提取所有图片链接地址&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;src=&amp;quot;([\w\W]+?)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 下载图片文件，并保存到img目录&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="n"&gt;opener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opener&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;newname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rfind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;newname&lt;/span&gt; 
        &lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;./img/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;newname&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; image download fail&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;将图片上传到七牛&lt;/h2&gt;
&lt;p&gt;参考&lt;a href="http://developer.qiniu.com/docs/v6/tools/qrsync.html"&gt;七牛文档&lt;/a&gt;，配置&lt;code&gt;conf.json&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;然后执行 &lt;code&gt;qrsync /path/to/your-conf.json&lt;/code&gt;，会将图片上传到七牛&lt;/p&gt;
&lt;h2&gt;替换xml中图片的url&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding=utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="c"&gt;# 这里修改成自己的空间地址&lt;/span&gt;
&lt;span class="n"&gt;strbucketurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://bucket.qiniudn.com/&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# 打开RSS文件读取内容&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wordpress.2014.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 用正则从RSS中提取所有图片链接地址&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;(http:.*?\.(jpg|png))&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;

&lt;span class="n"&gt;iCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c"&gt;# 替换所有url&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;arrlist&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arrlist&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;newname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rfind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="n"&gt;newurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strbucketurl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;newname&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;newurl&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;------------&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;iCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iCount&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newurl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;change url count:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;iCount&lt;/span&gt;

&lt;span class="n"&gt;outputfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;new2013.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outputfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outputfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意：执行上面脚本记得修改成自己的bucket地址！！！&lt;/p&gt;
&lt;h2&gt;将xml转换成markdown格式&lt;/h2&gt;
&lt;p&gt;这一步比较复杂，自己也折腾了好久，踩了好多坑，参考了&lt;a href="http://xdays.info/Pelican%E5%92%8CGithub%E6%9E%84%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html"&gt;xdays&lt;/a&gt; 的文章&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;code&gt;BeautifulSoup4&lt;/code&gt;和 &lt;code&gt;lxml&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install BeautifulSoup4  lxml
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;code&gt;pandoc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew install pandoc
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入blog目录，将xml文件装换成markdown格式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;wpfile&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;new2012&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行以下脚本，将markdown的文件名unquote成字符串：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python changeMDname.py ./tmp ./content/cat/&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unquote&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;flist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)],[])&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;flist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Slug&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unquote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
                &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.md&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;然后就可以发布blog了&lt;/h2&gt;
&lt;p&gt;所用到的脚本可以在&lt;a href="https://github.com/yangchenghu/convertWP2Pelican"&gt;这里&lt;/a&gt;下载&lt;/p&gt;
&lt;h2&gt;参考：&lt;/h2&gt;
&lt;p&gt;&lt;a href="floss.zoomquiet.io/data/20121221103448/index.html"&gt;迁移SAE wordpress的图片到jekyll&lt;/a&gt;  - 注：已经打不开了，参考的&lt;a href="http://webcache.googleusercontent.com/search?q=cache:Cdd-FI1a50oJ:floss.zoomquiet.io/data/20121221103448/index.html+&amp;amp;cd=1&amp;amp;hl=en&amp;amp;ct=clnk&amp;amp;gl=jp"&gt;google快照&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://xdays.info/Pelican%E5%92%8CGithub%E6%9E%84%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html"&gt;Pelican和Github构建静态博客&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">小虎</dc:creator><pubDate>Tue, 09 Sep 2014 00:00:00 +0800</pubDate><guid>tag:blog.chenghu.me,2014-09-09:bo-ke-qian-yi-wp-pelican.html</guid><category>Python</category><category>Pelican</category><category>WordPress</category></item></channel></rss>