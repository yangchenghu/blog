<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>小虎的博客</title><link href="http://blog.chenghu.me/" rel="alternate"></link><link href="http://blog.chenghu.me/feeds/xiao-hu.atom.xml" rel="self"></link><id>http://blog.chenghu.me/</id><updated>2016-08-12T00:00:00+08:00</updated><entry><title>renew letsencrypt certificates</title><link href="http://blog.chenghu.me/renew-letsencrypt-certificates.html" rel="alternate"></link><updated>2016-08-12T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2016-08-12:renew-letsencrypt-certificates.html</id><summary type="html">&lt;h1&gt;更新 letsencrypt 的证书&lt;/h1&gt;
&lt;p&gt;今天收到邮件，说我的&lt;code&gt;letsencrypt&lt;/code&gt;证书快要过期了，好吧，那登录上去renew一下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo letsencrypt renew
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果报错了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;2016-08-12 02:47:26,054:WARNING:letsencrypt.cli:Attempting to renew cert from /etc/letsencrypt/renewal/www.chenghu.me.conf produced an unexpected error: &amp;#39;server&amp;#39;. Skipping.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;悲剧，好吧，找一下了。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://community.letsencrypt.org/t/solved-keyerror-server-on-ubuntu-16-04-lts/15696"&gt;这里&lt;/a&gt; 有人说是0.4.1创建的证书的配置文件少一些字段。新版本的就可以。&lt;/p&gt;
&lt;p&gt;这不就so easy了。&lt;/p&gt;
&lt;p&gt;创建一个新的证书，复制里面的&lt;code&gt;renewalparams&lt;/code&gt;字段覆盖原配置中的&lt;code&gt;renewalparams&lt;/code&gt;字段，然后再&lt;code&gt;renew&lt;/code&gt;就好了&lt;/p&gt;
&lt;p&gt;对比一下老版本&lt;code&gt;renewalparams&lt;/code&gt;字段&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[renewalparams]&lt;/span&gt;
&lt;span class="na"&gt;authenticator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;standalone&lt;/span&gt;
&lt;span class="na"&gt;installer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;xxxxxxxxxxx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;新版本的&lt;code&gt;renewalparams&lt;/code&gt;字段&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[renewalparams]&lt;/span&gt;
&lt;span class="na"&gt;no_self_upgrade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;no_verify_ssl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;ifaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;register_unsafely_without_email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;uir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;installer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;
&lt;span class="na"&gt;config_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/etc/letsencrypt&lt;/span&gt;
&lt;span class="na"&gt;text_mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;staging&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;dry_run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;work_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/var/lib/letsencrypt&lt;/span&gt;
&lt;span class="na"&gt;tos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;duplicate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;http01_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;80&lt;/span&gt;
&lt;span class="na"&gt;init&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;noninteractive_mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;key_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;fullchain_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;csr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;agree_dev_preview&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;redirect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;verbose_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;-3&lt;/span&gt;
&lt;span class="na"&gt;config_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;renew_by_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;hsts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;authenticator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;standalone&lt;/span&gt;
&lt;span class="na"&gt;nginx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;rsa_key_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;2048&lt;/span&gt;
&lt;span class="na"&gt;verb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;renew&lt;/span&gt;
&lt;span class="na"&gt;checkpoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;manual_test_mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;apache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;cert_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;webroot_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;reinstall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;expand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;strict_permissions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;xxxxxxxxxxxxxxxxx&lt;/span&gt;
&lt;span class="na"&gt;prepare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;manual_public_ip_logging_ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;chain_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;break_my_certs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;domains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;ftp.chenghu.me,&lt;/span&gt;
&lt;span class="na"&gt;standalone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;manual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;https://acme-v01.api.letsencrypt.org/directory&lt;/span&gt;
&lt;span class="na"&gt;standalone_supported_challenges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tls-sni-01,http-01&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;webroot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;os_packages_only&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;function renew at 0x7f655c98e2a8&amp;gt;&lt;/span&gt;
&lt;span class="na"&gt;user_agent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="na"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;span class="na"&gt;tls_sni_01_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;443&lt;/span&gt;
&lt;span class="na"&gt;logs_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/var/log/letsencrypt&lt;/span&gt;
&lt;span class="na"&gt;configurator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;[[webroot_map]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;需要的同学可以直接复制，记得替换自己的&lt;code&gt;account&lt;/code&gt;字段和&lt;code&gt;domains&lt;/code&gt;字段。&lt;/p&gt;</summary><category term="tech"></category></entry><entry><title>BuildLeanoteInUbuntu</title><link href="http://blog.chenghu.me/buildleanoteinubuntu.html" rel="alternate"></link><updated>2016-07-01T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2016-07-01:buildleanoteinubuntu.html</id><summary type="html">&lt;h1&gt;在Ubuntu上搭建Leanote系统&lt;/h1&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;今天看到一个新闻&lt;a href="http://www.iplaysoft.com/news/3132"&gt;（创收压力大？印象笔记 Evernote 将对免费用户进行限制）&lt;/a&gt;，虽然自己也就是手机和电脑登录，可以继续使用免费版，不过真的很不舒服。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;像以前说免费的只有60M的每个月的流量，那好吧，我就只同步纯文本；不支持Markdown，那好吧，我就简单改改字体大小，改改背景颜色；代码贴进去，各种不好看，那好吧，我只放些简单代码片段，现在又限制两台设备登录，好吧，我换别的了。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;中间使用了一段时间微软的&lt;code&gt;OneNote&lt;/code&gt;，确实格式好看多了，但是实在太笨重了。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;后来又使用了一阵&lt;code&gt;Simplenote&lt;/code&gt;，支持markdown语法，但实在有点太简陋。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;看到文章后面有介绍&lt;code&gt;leanote&lt;/code&gt;，开源，小巧，自带代码高亮，支持markdown语法，有mac和iOS的客户端，还自己搭建服务器，自己的服务器还不受流量限制，实在太爽了。&lt;/p&gt;
&lt;h2&gt;1.安装Leanote&lt;/h2&gt;
&lt;p&gt;在&lt;a href="http://leanote.org/#download"&gt;leanote官网&lt;/a&gt;来下载二进制文件直接解压即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://sourceforge.net/projects/leanote-bin/files/2.0/leanote-linux-amd64-v2.0.bin.tar.gz/download
tar -xzvf leanote-linux-amd64.v2.0.bin.tar.gz
mv leanote  ~/www/leanote
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;2.安装MongoDB&lt;/h2&gt;
&lt;p&gt;依然是下载，解压的步骤，太简单了，爽&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget  https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-2.6.4.tgz
tar -xzvf mongodb-linux-x86_64-2.6.4.tgz/
mv mongodb-linux-x86_64-2.6.4.tgz ~/tools/mongodb-linux-x86_64-2.6.4/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;添加一下环境变量，方便全局使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;sudo vim /etc/profile&lt;/span&gt;
&lt;span class="x"&gt;export PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:/home/user1/tools/mongodb-linux-x86_64-2.6.4/bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使配置生效&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;source /etc/profile
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;3.启动mongoDB数据库&lt;/h2&gt;
&lt;p&gt;创建一个放数据库的文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir ~/data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动mongodb&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mongod --dbpath ~/data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显示如下内容则表示启动成功&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] MongoDB starting : pid=5073 port=27017 dbpath=/home/user/data 64-bit host=localhost&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten]&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] ** WARNING: You are running in OpenVZ which can cause issues on versions of RHEL older than RHEL6.&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] db version v2.6.4&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] git version: 3a830be0eb92d772aa855ebb711ac91d658ee910&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] build info: Linux build7.nj1.10gen.cc 2.6.32-431.3.1.el6.x86_64 &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt;1 SMP Fri Jan 3 21:39:27 UTC 2014 x86_64 BOOST_LIB_VERSION=1_49&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] allocator: tcmalloc&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.474-0400 [initandlisten] options: &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt; storage: &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt; dbPath: &amp;quot;/home/user/data&amp;quot; } }&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.477-0400 [initandlisten] journal dir=/home/user/data/journal&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.477-0400 [initandlisten] recover : no journal files present, no recovery needed&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.481-0400 [FileAllocator] allocating new datafile /home/user/data/local.ns, filling with zeroes...&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.481-0400 [FileAllocator] creating directory /home/user/data/_tmp&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.481-0400 [FileAllocator] done allocating datafile /home/user/data/local.ns, size: 16MB,  took 0 secs&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.516-0400 [FileAllocator] allocating new datafile /home/user/data/local.0, filling with zeroes...&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.532-0400 [FileAllocator] done allocating datafile /home/user/data/local.0, size: 64MB,  took 0.011 secs&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.597-0400 [initandlisten] build index on: local.startup_log properties: &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt; v: 1, key: &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt; _id: 1 }, name: &amp;quot;_id_&amp;quot;, ns: &amp;quot;local.startup_log&amp;quot; }&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.597-0400 [initandlisten]     added index to empty collection&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.597-0400 [initandlisten] command local.&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;cmd&lt;/span&gt;&lt;span class="x"&gt; command: create &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt; create: &amp;quot;startup_log&amp;quot;, size: 10485760, capped: true } ntoreturn:1 keyUpdates:0 numYields:0  reslen:37 115ms&lt;/span&gt;
&lt;span class="x"&gt;2016-07-02T02:14:19.599-0400 [initandlisten] waiting for connections on port 27017&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;4.导入数据到数据库&lt;/h2&gt;
&lt;p&gt;可以使用&lt;code&gt;leanote/mongodb_backup/leanote_install_data&lt;/code&gt;来导入数据&lt;/p&gt;
&lt;p&gt;因为刚刚启动mongodb占用了一个终端，所以这里要再开启一个终端，来导入数据。&lt;/p&gt;
&lt;p&gt;mongodb v2 与 v3 版本导入数据会有些区别.&lt;/p&gt;
&lt;p&gt;v2版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; mongorestore -h localhost -d leanote --directoryperdb ~/www/leanote/mongodb_backup/leanote_install_data/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;v3版本：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mongorestore -h localhost -d leanote --dir ~/www/leanote/mongodb_backup/leanote_install_data/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;5.配置leanote&lt;/h2&gt;
&lt;p&gt;主要是修改&lt;code&gt;leanote/conf/app.conf&lt;/code&gt;这个文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app.secret&lt;/code&gt; 密钥，一定要修改，一定要修改，一定要修改。重要的事情说三遍。
&lt;code&gt;http.port&lt;/code&gt; 本地端口，默认是9000，可以改为自己喜欢的。
&lt;code&gt;site.url&lt;/code&gt; 如果由外网访问的话，这里可以改成外网访问的网址。&lt;/p&gt;
&lt;h2&gt;6.启动leanote&lt;/h2&gt;
&lt;p&gt;直接调用&lt;code&gt;leanote/bin/run.sh&lt;/code&gt;来启动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bash ~/www/leanote/bin/run.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就可以使用&lt;code&gt;http://localhost:9000&lt;/code&gt;来访问了&lt;/p&gt;
&lt;h2&gt;7.最后&lt;/h2&gt;
&lt;p&gt;最后就是加域名，配ssl证书，配nginx，重启nginx。&lt;/p&gt;
&lt;h1&gt;结论&lt;/h1&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;搭建还是比较简单的，简单使用了一下，感觉&lt;code&gt;leanote&lt;/code&gt;还不错，目前可能还不太完美，比如，目前管理后台还不能删除用户(目前使用的是&lt;code&gt;v2.0&lt;/code&gt;版本，后续应该会有的)，但已经很好很好了，赞一个。&lt;/p&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;h3&gt;1.在启动mongodb的时候提示“exception in initAndListen std::exception: locale::facet::_S_create_c_locale name not valid, terminating”&lt;/h3&gt;
&lt;p&gt;根据&lt;a href="http://stackoverflow.com/questions/19668570/mongodb-localefacet-s-create-c-locale-name-not-valid"&gt;stackoverflow&lt;/a&gt;上方法，需要先设置&lt;code&gt;LC_ALL&lt;/code&gt;才可以。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export LC_ALL=C
mongod --dbpath ~/data
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://leanote.org/"&gt;leanote.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanote.com/"&gt;leanote.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/leanote/leanote"&gt;leanote in github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/leanote/leanote/wiki/leanote%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%89%88%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B"&gt;Leanote二进制版详细安装教程&lt;/a&gt;&lt;/p&gt;</summary><category term="linux"></category><category term="ubuntu"></category><category term="mongodb"></category><category term="leanote"></category></entry><entry><title>DNS,dnsmasq,dnscrypt,</title><link href="http://blog.chenghu.me/dnsdnsmasqdnscrypt.html" rel="alternate"></link><updated>2016-06-24T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2016-06-24:dnsdnsmasqdnscrypt.html</id><summary type="html">&lt;h1&gt;在Mac OSX 上配置 DNSCrypt＋dnsmasq 防止污染&lt;/h1&gt;
&lt;p&gt;今天无意间看到一个防治DNS 污染的文章&lt;a href="https://skyline75489.github.io/post/2014-8-1_my-china-dns.html"&gt;原文地址&lt;/a&gt;，想试试，没想到折腾了三天，记录一下操作过程。&lt;/p&gt;
&lt;p&gt;中间还折腾了一下&lt;code&gt;unbound&lt;/code&gt;，结果在Mac上启动不起来，一启动就退出了，没有找到原因，如果有大神知道原因，还请指教。&lt;/p&gt;
&lt;h2&gt;1. 安装&lt;/h2&gt;
&lt;p&gt;在Mac上安装DNSCrypt和dnsmasq还是比较容易的，直接用Homebrew安装就可以。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brew install dnsmasq
&lt;span class="nv"&gt;$ &lt;/span&gt;brew install dnscrypt-proxy
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;2.启动DNSCrypt&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;DNSCrypt-proxy&lt;/code&gt;主要通过加密的隧道来解析一些被污染的dns地址。直接贴过来上面文章里的启动参数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;➜  ~ sudo /usr/local/sbin/dnscrypt-proxy --local-address=127.0.0.1:40 --edns-payload-size=4096 --user=nobody --resolver-address=77.66.84.233:443 --provider-name=2.dnscrypt-cert.resolver2.dnscrypt.eu --provider-key=3748:5585:E3B9:D088:FD25:AD36:B037:01F5:520C:D648:9E9A:DD52:1457:4955:9F0A:9955
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;--local-address&lt;/code&gt; 这个字段是表示本地提供加密dns解析的地址
&lt;code&gt;--edns-payload-size&lt;/code&gt; 这个字断指定edns的payload size大小
&lt;code&gt;--user&lt;/code&gt; 指定用户身份运行
&lt;code&gt;--resolver-address&lt;/code&gt; 指定加密的DNS地址
&lt;code&gt;--provider-name&lt;/code&gt; 指定DNS提供商的名字
&lt;code&gt;--provider-key&lt;/code&gt; 指定DNS服务器的密钥&lt;/p&gt;
&lt;p&gt;正常启动之后会显示如下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[NOTICE] Starting dnscrypt-proxy 1.6.1
[INFO] Generating a new session key pair
[INFO] Done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们用&lt;code&gt;dig&lt;/code&gt;命令来试一下，结果失败了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;➜&lt;/span&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="n"&gt;dig&lt;/span&gt; &lt;span class="mf"&gt;@127.0.0.1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;DiG&lt;/span&gt; &lt;span class="mf"&gt;9.8.3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;P1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;@127.0.0.1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;9999&lt;/span&gt; &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="nl"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="n"&gt;timed&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;servers&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;reached&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在DNSCrypt页面频繁出现&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[ERROR] Unable to retrieve server certificates
[INFO] Refetching server certificates
[ERROR] Unable to retrieve server certificates
[INFO] Refetching server certificates
[ERROR] Unable to retrieve server certificates
[INFO] Refetching server certificates
[ERROR] Unable to retrieve server certificates
[INFO] Refetching server certificates
[ERROR] Unable to retrieve server certificates
[INFO] Refetching server certificates
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查了一下，好像是被干扰了，当然，如果有时候运气好的话，也会连接上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[INFO] Chosen certificate #808464433 is valid from [2015-09-11] to [2016-09-10]&lt;/span&gt;
&lt;span class="err"&gt;[INFO]&lt;/span&gt; &lt;span class="err"&gt;Server&lt;/span&gt; &lt;span class="err"&gt;key&lt;/span&gt; &lt;span class="err"&gt;fingerprint&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;164E:1AD6:4356:777D:2019:F2F9:D389:2DDB:BC75:8AF0:9172:8E0C:A874:10C7:3BE8:423B&lt;/span&gt;
&lt;span class="err"&gt;[NOTICE]&lt;/span&gt; &lt;span class="err"&gt;Proxying&lt;/span&gt; &lt;span class="err"&gt;from&lt;/span&gt; &lt;span class="err"&gt;127.0.0.1:40&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;77.66.84.233:443&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后再次使用&lt;code&gt;dig&lt;/code&gt;命令查一下google的ip地址，就可以查询到结果了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;➜&lt;/span&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="n"&gt;dig&lt;/span&gt; &lt;span class="mf"&gt;@127.0.0.1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;

&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;DiG&lt;/span&gt; &lt;span class="mf"&gt;9.8.3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;P1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;@127.0.0.1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;9999&lt;/span&gt; &lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="nl"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;Got&lt;/span&gt; &lt;span class="nl"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;HEADER&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class="nl"&gt;opcode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;QUERY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NOERROR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26326&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="nl"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;qr&lt;/span&gt; &lt;span class="n"&gt;rd&lt;/span&gt; &lt;span class="n"&gt;ra&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;QUERY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;ANSWER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;AUTHORITY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;ADDITIONAL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;OPT&lt;/span&gt; &lt;span class="nl"&gt;PSEUDOSECTION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;EDNS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;:;&lt;/span&gt; &lt;span class="nl"&gt;udp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4096&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;QUESTION&lt;/span&gt; &lt;span class="nl"&gt;SECTION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;            &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;ANSWER&lt;/span&gt; &lt;span class="nl"&gt;SECTION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="mf"&gt;172.217.18.78&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;AUTHORITY&lt;/span&gt; &lt;span class="nl"&gt;SECTION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;41354&lt;/span&gt;   &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;NS&lt;/span&gt;  &lt;span class="n"&gt;ns2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;41354&lt;/span&gt;   &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;NS&lt;/span&gt;  &lt;span class="n"&gt;ns1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;41354&lt;/span&gt;   &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;NS&lt;/span&gt;  &lt;span class="n"&gt;ns4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;41354&lt;/span&gt;   &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;NS&lt;/span&gt;  &lt;span class="n"&gt;ns3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;ADDITIONAL&lt;/span&gt; &lt;span class="nl"&gt;SECTION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;ns1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;281999&lt;/span&gt;  &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="mf"&gt;216.239.32.10&lt;/span&gt;
&lt;span class="n"&gt;ns2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;335276&lt;/span&gt;  &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="mf"&gt;216.239.34.10&lt;/span&gt;
&lt;span class="n"&gt;ns3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;331344&lt;/span&gt;  &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="mf"&gt;216.239.36.10&lt;/span&gt;
&lt;span class="n"&gt;ns4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="mi"&gt;171246&lt;/span&gt;  &lt;span class="n"&gt;IN&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;   &lt;span class="mf"&gt;216.239.38.10&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;Query&lt;/span&gt; &lt;span class="nl"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;362&lt;/span&gt; &lt;span class="n"&gt;msec&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="nl"&gt;SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="nl"&gt;WHEN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Fri&lt;/span&gt; &lt;span class="n"&gt;Jun&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="n"&gt;MSG&lt;/span&gt; &lt;span class="n"&gt;SIZE&lt;/span&gt;  &lt;span class="nl"&gt;rcvd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;191&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我想说的是，如果频繁的运气不好的话可以添加下面字段&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--ephemeral-keys&lt;/code&gt;混淆密钥，&lt;a href="https://www.v2ex.com/t/286777"&gt;from here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另&lt;/p&gt;
&lt;p&gt;肯定有人问这些服务器从哪里得到的，我是从&lt;code&gt;/usr/local/Cellar/dnscrypt-proxy/1.6.1/share/dnscrypt-proxy/dnscrypt-resolvers.csv&lt;/code&gt;里面找的，也可以从这个&lt;a href="https://github.com/jedisct1/dnscrypt-proxy/blob/master/dnscrypt-resolvers.csv"&gt;git仓库&lt;/a&gt;找一下。&lt;/p&gt;
&lt;h2&gt;3.配置dnsmasq&lt;/h2&gt;
&lt;p&gt;配置DNSMasq，修改 /usr/local/etc/dnsmasq.conf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# 不读取有关解析的配置文件，默认使用/etc/revolve.conf中的上游服务器地址进行解析
# 这里我们把地址直接写在配置文件里，所以不需要这个了
no-resolv
# 不检查有关解析的配置文件更新（原因同上）
no-poll
# 配置文件路径，加载dnsmasq-china-list的那两个配置文件
conf-dir=/usr/local/etc/dnsmasq.d
# 附加Hosts文件，可有可无，我觉得以后可能还是需要用到Hosts，就加入了这一行
addn-hosts=/usr/local/etc/dnsmasq.hosts
# 上游服务器设置成DNSCrypt
server=127.0.0.1#40
# 缓存大小，默认是150，调大点应该没坏处
cache-size=2000
# 启用DNSSEC代理，应该能增强安全性吧
proxy-dnssec
# 可以自行参照man dnsmasq里的内容继续添加别的参数
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/felixonmars/dnsmasq-china-list"&gt;这个项目&lt;/a&gt;维护了一份中国地区大部分网站的地址。这个列表来可以帮助DNSMasq判断应该把DNS请求发向哪里。我们先要把里面的两个配置文件下载下来，创建 /usr/local/etc/dnsmasq.d 文件夹，下载项目的文件放到这个目录下。当然自己也可以根据配置文件来添加自己的配置文件。&lt;/p&gt;
&lt;p&gt;几个配置文件的说明&lt;/p&gt;
&lt;p&gt;#指定baidu.com的域名到114来解析。&lt;/p&gt;
&lt;p&gt;server=/baidu.com/114.114.114.114     &lt;/p&gt;
&lt;p&gt;#指定baidu.com的域名解析到 127.0.0.1 的ip地址上，类似hosts文件&lt;/p&gt;
&lt;p&gt;address=/baidu.com/127.0.0.1    &lt;/p&gt;
&lt;p&gt;#指定202这个ip不响应，当ISP进行DNS劫持时，会将域名解析到指定的ip地址，我们可以把这个地址写在这里，当遇到域名解析到这个地址的时候，则不响应。&lt;/p&gt;
&lt;p&gt;bogus-nxdomain=202.202.202.202       &lt;/p&gt;
&lt;h1&gt;4.启动dnsmasq&lt;/h1&gt;
&lt;p&gt;直接使用下面的命令启动 dnsmasq&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /usr/local/opt/dnsmasq/sbin/dnsmasq -C /usr/local/etc/dnsmasq.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后将系统的dns设置成127.0.0.1，在使用&lt;code&gt;dig&lt;/code&gt;来测试一下google.com的解析&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;➜&lt;/span&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nt"&gt;dig&lt;/span&gt; &lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;

&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;DiG&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;&lt;span class="nc"&gt;.8.3-P1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;global&lt;/span&gt; &lt;span class="nt"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;cmd&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;Got&lt;/span&gt; &lt;span class="nt"&gt;answer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;HEADER&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;opcode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;QUERY&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;NOERROR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;59153&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;qr&lt;/span&gt; &lt;span class="nt"&gt;rd&lt;/span&gt; &lt;span class="nt"&gt;ra&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;QUERY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;ANSWER&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;AUTHORITY&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;ADDITIONAL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;

&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;OPT&lt;/span&gt; &lt;span class="nt"&gt;PSEUDOSECTION&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;EDNS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;:;&lt;/span&gt; &lt;span class="nt"&gt;udp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4096&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;QUESTION&lt;/span&gt; &lt;span class="nt"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;            &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;A&lt;/span&gt;

&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;ANSWER&lt;/span&gt; &lt;span class="nt"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;150&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;A&lt;/span&gt;   &lt;span class="nt"&gt;216&lt;/span&gt;&lt;span class="nc"&gt;.58.209.206&lt;/span&gt;

&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;AUTHORITY&lt;/span&gt; &lt;span class="nt"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;39469&lt;/span&gt;   &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;NS&lt;/span&gt;  &lt;span class="nt"&gt;ns4&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;39469&lt;/span&gt;   &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;NS&lt;/span&gt;  &lt;span class="nt"&gt;ns1&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;39469&lt;/span&gt;   &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;NS&lt;/span&gt;  &lt;span class="nt"&gt;ns2&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="nt"&gt;google&lt;/span&gt;&lt;span class="nc"&gt;.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;39469&lt;/span&gt;   &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;NS&lt;/span&gt;  &lt;span class="nt"&gt;ns3&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;ADDITIONAL&lt;/span&gt; &lt;span class="nt"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;ns1&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;280114&lt;/span&gt;  &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;A&lt;/span&gt;   &lt;span class="nt"&gt;216&lt;/span&gt;&lt;span class="nc"&gt;.239.32.10&lt;/span&gt;
&lt;span class="nt"&gt;ns2&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;333391&lt;/span&gt;  &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;A&lt;/span&gt;   &lt;span class="nt"&gt;216&lt;/span&gt;&lt;span class="nc"&gt;.239.34.10&lt;/span&gt;
&lt;span class="nt"&gt;ns3&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;329459&lt;/span&gt;  &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;A&lt;/span&gt;   &lt;span class="nt"&gt;216&lt;/span&gt;&lt;span class="nc"&gt;.239.36.10&lt;/span&gt;
&lt;span class="nt"&gt;ns4&lt;/span&gt;&lt;span class="nc"&gt;.google.com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     &lt;span class="nt"&gt;169361&lt;/span&gt;  &lt;span class="nt"&gt;IN&lt;/span&gt;  &lt;span class="nt"&gt;A&lt;/span&gt;   &lt;span class="nt"&gt;216&lt;/span&gt;&lt;span class="nc"&gt;.239.38.10&lt;/span&gt;

&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;Query&lt;/span&gt; &lt;span class="nt"&gt;time&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;517&lt;/span&gt; &lt;span class="nt"&gt;msec&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;127&lt;/span&gt;&lt;span class="nc"&gt;.0.0.1&lt;/span&gt;&lt;span class="nf"&gt;#53&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;127&lt;/span&gt;&lt;span class="nc"&gt;.0.0.1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;Fri&lt;/span&gt; &lt;span class="nt"&gt;Jun&lt;/span&gt; &lt;span class="nt"&gt;24&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;&lt;span class="nd"&gt;:44:00&lt;/span&gt; &lt;span class="nt"&gt;2016&lt;/span&gt;
&lt;span class="o"&gt;;;&lt;/span&gt; &lt;span class="nt"&gt;MSG&lt;/span&gt; &lt;span class="nt"&gt;SIZE&lt;/span&gt;  &lt;span class="nt"&gt;rcvd&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;191&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;5.结论&lt;/h1&gt;
&lt;p&gt;测试了一下，发现原来twitter和instragram是被污染后导致不能访问，google还是不能直接访问。不过dns干净了很多，因为有了缓存，访问起来也快一些，配合ss使用还是很爽的。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://skyline75489.github.io/post/2014-8-1_my-china-dns.html"&gt;我(以前)的DNS解决方案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://03k.org/dnscrypt-proxy-read.html"&gt;dnscrypt-proxy参数详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/ahmozkya/8456503"&gt;Homebrew with DNSMasq + DNSCrypt-proxy (OpenDNS)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dnscrypt.org"&gt;dnscrypt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.phoenixlzx.com/2016/04/27/better-dns-with-unbound/"&gt;使用 Unbound 搭建更好用的 DNS 服务器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://codeplayer.org/2014/02/587"&gt;翻墙教程之DNSCrypt+unbound&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;</summary><category term="tech"></category><category term="mac"></category><category term="dns"></category></entry><entry><title>arrange uwsgi with bottle in ubuntu</title><link href="http://blog.chenghu.me/arrange-uwsgi-with-bottle-in-ubuntu.html" rel="alternate"></link><updated>2016-06-02T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2016-06-02:arrange-uwsgi-with-bottle-in-ubuntu.html</id><summary type="html">&lt;h1&gt;Nginx 快速部署Bottle＋Uwsgi&lt;/h1&gt;
&lt;h2&gt;1. 安装&lt;/h2&gt;
&lt;p&gt;安装 uwsgi 和 Bottle 框架&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install uwsgi uwsgi-plugin-python python-bottle nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;2. Bottle程序结构&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/var/www/webapp/
    plugins/
        __init__.py
    static/
        css/
        files/
        images/
        js/
    views/
        base.tpl
        page.tpl
    app.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;app.py&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;bottle&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bottle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    The front &amp;quot;index&amp;quot; page&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Hello world!&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StripPathMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Get that slash out of the request&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;PATH_INFO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;PATH_INFO&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;StripPathMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;reloader&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10059&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;code&gt;reloader=True&lt;/code&gt; 有代码变化的时候，自动加载。&lt;/p&gt;
&lt;h2&gt;3. 启动服务&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python app.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在浏览器里访问&lt;code&gt;http://127.0.0.1:10059&lt;/code&gt;就能看到返回&lt;/p&gt;
&lt;h2&gt;4. 配置uwsgi&lt;/h2&gt;
&lt;p&gt;编辑uwsgi配置文件，
&lt;code&gt;sudo vim /etc/uwsgi/apps-available/bottle.ini&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[uwsgi]&lt;/span&gt;
&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/run/uwsgi/app/bottle/socket&lt;/span&gt;
&lt;span class="na"&gt;chdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/var/www/bottle&lt;/span&gt;
&lt;span class="na"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;plugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;python&lt;/span&gt;
&lt;span class="na"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;app.py&lt;/span&gt;
&lt;span class="na"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;span class="na"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同nginx一样的操作，做一个软连接
&lt;code&gt;ln -s /etc/uwsgi/apps-available/bottle.ini /etc/uwsgi/apps-enabled/bottle.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;启动uwsgi，&lt;code&gt;sudo service uwsgi restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于使用的是socket的方式，不能通过浏览器来访问，所以需要nginx来代理一下。&lt;/p&gt;
&lt;h2&gt;5. 配置nginx&lt;/h2&gt;
&lt;p&gt;编辑配置文件，&lt;code&gt;sudo vim /etc/nginx/sites-available/bottle.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;upstream&lt;/span&gt; &lt;span class="nt"&gt;_bottle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;uwsgi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bottle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;try_files&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;uwsgi&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="k"&gt;@uwsgi&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;include&lt;/span&gt; &lt;span class="nt"&gt;uwsgi_params&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nt"&gt;uwsgi_pass&lt;/span&gt; &lt;span class="nt"&gt;_bottle&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样做一个软连接到&lt;code&gt;sites-enabled&lt;/code&gt;目录下，
&lt;code&gt;sudo ln -s /etc/nginx/sites-available/bottle.conf /etc/nginx/sites-enabled/bottle.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;测试并生效配置文件，&lt;code&gt;sudo nginx -t &amp;amp; sudo service nginx reload&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;现在就可以在浏览器里来直接访问了&lt;code&gt;http://127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;6.配置git hooks&lt;/h2&gt;
&lt;p&gt;这样服务就可以跑起来了，然后在配置git，来随时可以提交代码更新。&lt;/p&gt;
&lt;p&gt;在本地文件夹生成仓库&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加远程仓库&lt;code&gt;git remote add origin http://xx.xx.xx/bottle.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加文件到仓库 &lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;提交到仓库&lt;code&gt;git push origin master&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置一个git 的 hooks来在提交到仓库的时候，自动去拉取新的代码。&lt;/p&gt;
&lt;p&gt;找了一下，需要配置&lt;code&gt;post-receive&lt;/code&gt;这个hooks，在提交完成后会自动调用。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;unset&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --local-env-vars&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; /xxx/bottle
/usr/bin/git pull
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;都配置好了，随便修改一点试试，然后提交，结果，并页面并没有刷新，登上服务器看一下，代码是有更新，重启一下uwsgi，结果就出来了，看来是uwsgi没有自动更新，继续找。&lt;/p&gt;
&lt;h2&gt;7.uwsgi自动加载&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.zhihu.com/question/21016845"&gt;使用uwsgi和nginx做服务器和django框架，为什么每次修改代码都需要重启uwsgi呢？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;遇到一个一样的问题&lt;/p&gt;
&lt;p&gt;还有一种方法配置“py-autoreload = 1”，每次修改代码会自动reload，不再需要手动重启。&lt;/p&gt;
&lt;p&gt;修改一下uwsgi的配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[uwsgi]&lt;/span&gt;
&lt;span class="na"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/run/uwsgi/app/bottle/socket&lt;/span&gt;
&lt;span class="na"&gt;chdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/home/yangch/www/bottle&lt;/span&gt;
&lt;span class="na"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;py-autoreload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;plugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;python&lt;/span&gt;
&lt;span class="na"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;app.py&lt;/span&gt;
&lt;span class="na"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;span class="na"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;www-data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后重启一下uwsgi，&lt;code&gt;sudo service uwsgi restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再次提交代码，就可以看到更新了&lt;/p&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;h3&gt;hook的问题&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/jouny/p/4682444.html"&gt;git 系统中 post-receive 钩子不能正常执行 git pull 解决方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有一个需求是本地git在push到远程 git repo 之后，在远程服务器上自动在/dir/foo下执行 git pull 的操作。想来是一个很简单的需求，不就是在远程的 foo.git 仓库中的 hook 里加一个 post-receive 的钩子，然后在钩子里加入一个 git pull 的操作。但是实际操作的时候发现有问题的，因为这样忽略了一个小细节的问题。&lt;/p&gt;
&lt;p&gt;操作之前，头脑里想的代码如下：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /var/git/web3/etc/puppet
/usr/bin/git pull
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;用这个代码在 git push ssh://git@ownlinux.org:/opt/foo.git 之后，发现远程服务器上的 /dir/foo 目录下并没有成功 pull 到最新的数据，并且终端上也有报错（remote: fatal: Not a git repository: ‘.’）。 后面发现 git 的钩子在运行的时候会调用 GIT_DIR 这个环境变量，而不是PWD 这个。所以在 git pull 的时候提示 Not a git repository: ‘.’ ，其中 “.” 正是 GIT_DIR 这个环境变量的值。&lt;/p&gt;
&lt;p&gt;钩子的代码改成下面的之后，运行正常了：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nb"&gt;unset&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;git rev-parse --local-env-vars&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /var/git/web3/etc/puppet
/usr/bin/git pull
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;hr /&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://michael.lustfield.net/nginx/bottle-uwsgi-nginx-quickstart"&gt;Bottle + UWSGI + Nginx Quickstart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Customizing Git - Git Hooks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gitbook.liuhui998.com/5_8.html"&gt;Git Hooks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/jouny/p/4682444.html"&gt;git 系统中 post-receive 钩子不能正常执行 git pull 解决方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://alfred-long.iteye.com/blog/1836347"&gt;git钩子 自动更新服务器上版本库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/zhouej/archive/2012/03/25/2379646.html"&gt;uWSGI参考资料（1.0版本的配置选项列表）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/Xjng/archive/2014/05/27/3754635.html"&gt;Nginx+uWSGI+bottle 在Linux上部署&lt;/a&gt;&lt;/p&gt;</summary><category term="tech"></category><category term="nginx"></category><category term="uwsgi"></category><category term="bottle"></category><category term="python"></category></entry><entry><title>install golang to ubuntu</title><link href="http://blog.chenghu.me/install-golang-to-ubuntu.html" rel="alternate"></link><updated>2016-01-03T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2016-01-03:install-golang-to-ubuntu.html</id><summary type="html">&lt;h1&gt;在ubuntu上搭建go环境&lt;/h1&gt;
&lt;p&gt;搜了一下，发现有一个比较全面的&lt;a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/01.1.md"&gt;教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然还有&lt;a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/01.1.md"&gt;官方的教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还是比较喜欢使用&lt;code&gt;apt-get&lt;/code&gt;的方式来安装（当然我也是编译了好几次没有成功，T_T）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install golang&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后添加一下环境，&lt;code&gt;sudo vim /etc/profile&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;export GOROOT=~/go&lt;/span&gt;
&lt;span class="x"&gt;export GOARCH=386&lt;/span&gt;
&lt;span class="x"&gt;export GOOS=linux&lt;/span&gt;
&lt;span class="x"&gt;export GOBIN=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOROOT&lt;/span&gt;&lt;span class="x"&gt;/bin/&lt;/span&gt;
&lt;span class="x"&gt;export GOTOOLS=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOROOT&lt;/span&gt;&lt;span class="x"&gt;/pkg/tool/&lt;/span&gt;
&lt;span class="x"&gt;export PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOBIN&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOTOOLS&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;刷新一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;source /etc/profile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;写个Helloword来试试&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;go print line!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;保存到test.go，跑一下试试&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;go run test.go
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://77fyf6.com1.z0.glb.clouddn.com/go_install_run_error.png" /&gt;&lt;/p&gt;
&lt;p&gt;看这个样子要在home目录下，有go这么个目录，里面还有src文件供运行时查找&lt;/p&gt;
&lt;p&gt;好吧&lt;/p&gt;
&lt;p&gt;去&lt;a href="https://golang.org/dl/"&gt;官方下载&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://storage.googleapis.com/golang/go1.5.2.linux-amd64.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后解压到&lt;code&gt;~/go&lt;/code&gt;目录下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tar zxvf go1.5.2.linux-amd64.tar.gz ~/go
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们再运行一次呢&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;go run test.go
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://77fyf6.com1.z0.glb.clouddn.com/go_install_run_sucess.png" /&gt;&lt;/p&gt;
&lt;p&gt;ok，成功！&lt;/p&gt;</summary><category term="golang"></category><category term="ubuntu"></category></entry><entry><title>manage multi ssh keys</title><link href="http://blog.chenghu.me/manage-multi-ssh-keys.html" rel="alternate"></link><updated>2016-01-03T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2016-01-03:manage-multi-ssh-keys.html</id><summary type="html">&lt;h1&gt;管理多个SSH的密钥&lt;/h1&gt;
&lt;p&gt;大家访问github或者gitlab的时候，还是使用ssh比较方便，使用https方式需要输入用户名密码，但是同时有github和gitlab的时候就比较麻烦了&lt;/p&gt;
&lt;p&gt;下面分享一下同时管理多个ssh密钥的方法&lt;/p&gt;
&lt;p&gt;1.大家生成ssh key的时候一般用以下命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~  ssh-keygen -t rsa -C &amp;quot;mail@mail.com&amp;quot;
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/username/.ssh/id_rsa): /Users/username/.ssh/id_rsa_github
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /Users/username/.ssh/id_rsa_github.
Your public key has been saved in /Users/username/.ssh/id_rsa_github.pub.
The key fingerprint is:
SHA256:D3ew605ht8B9NMCvadetvF6wcG//JwUrNbdegueAXQY/3n8 username@MBP
The key&amp;#39;s randomart image is:
+---[RSA 2048]----+
|                 |
|                 |
|          . .    |
|        .  o o   |
|        So* = =  |
|         B+% x o |
|         .@o&amp;amp; = .|
|         *.*+B.oE|
|        .oB*ooo +|
+----[SHA256]-----+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到，在&lt;code&gt;Enter file in which to save the key (/Users/username/.ssh/id_rsa):&lt;/code&gt;这句提示，如果不输入的话，默认生成key就放在了&lt;code&gt;/Users/username/.ssh/id_rsa&lt;/code&gt;这个路径下，我们可以自己输入一个路径，比如：&lt;code&gt;/Users/username/.ssh/id_rsa_github&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同样生成一个&lt;code&gt;id_rsa_gitlab&lt;/code&gt;密钥&lt;/p&gt;
&lt;p&gt;2.我们把生成好的私钥添加到ssh-agent中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh-add ~/.ssh/id_rsa_github
ssh-add ~/.ssh/id_rsa_gitlab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.将对应的公钥文件&lt;code&gt;id_rsa_github.pub&lt;/code&gt;添加到github，将&lt;code&gt;id_rsa_gitlab.pub&lt;/code&gt;添加到gitlab上。&lt;/p&gt;
&lt;p&gt;4.在&lt;code&gt;~/.ssh/&lt;/code&gt;目录下添加config文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;touch ~/.ssh/config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5.修改config文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#aaa  (github 配置)
Host github
HostName github.com
User git
IdentityFile ~/.ssh/id_rsa_github

#aaa  (gitlab 配置)
Host gitlab
HostName gitlab.com
User git
IdentityFile ~/.ssh/id_rsa_gitlab
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6.测试一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh -T git@github.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://77fyf6.com1.z0.glb.clouddn.com/ssh_key_test_ok.png" /&gt;&lt;/p&gt;
&lt;p&gt;以后操作就可以使用ssh方式来访问仓库了。&lt;/p&gt;</summary><category term="ssh"></category><category term="key"></category></entry><entry><title>React-Native:Use Static Image Resources</title><link href="http://blog.chenghu.me/react-nativeuse-static-image-resources.html" rel="alternate"></link><updated>2015-12-27T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-12-27:react-nativeuse-static-image-resources.html</id><summary type="html">&lt;h1&gt;React-Native 教程 2 ：在React-Native项目中使用静态图片资源&lt;/h1&gt;
&lt;p&gt;看过&lt;a href="https://facebook.github.io/react-native/docs/image.html#content"&gt;官方教程&lt;/a&gt;同学都知道如果我们想显示一个图片的话肯定会使用&lt;code&gt;Image&lt;/code&gt;这个组件&lt;/p&gt;
&lt;p&gt;使用方式如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;renderImages: function() {
  return (
    &lt;span class="nt"&gt;&amp;lt;View&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;Image&lt;/span&gt;
        &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.icon}&lt;/span&gt;
        &lt;span class="na"&gt;source=&lt;/span&gt;&lt;span class="s"&gt;{require(&amp;#39;image!myIcon&amp;#39;)}&lt;/span&gt;  
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;Image&lt;/span&gt;
        &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.logo}&lt;/span&gt;
        &lt;span class="na"&gt;source=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://facebook.github.io/react/img/logo_og.png&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
      &lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;
  );
},
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里显示本地图片的话会使用&lt;code&gt;source={require('image!图片名称')}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示网络图片的时候会使用&lt;code&gt;source={{uri: '图片地址'}}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般显示网络图片的话，只要图片的地址没有问题，图片就能显示。&lt;/p&gt;
&lt;p&gt;但是显示本地图片的时候，&lt;/p&gt;</summary><category term="react-native"></category></entry><entry><title>React-Native:Integrating with Existing Apps</title><link href="http://blog.chenghu.me/react-nativeintegrating-with-existing-apps.html" rel="alternate"></link><updated>2015-12-26T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-12-26:react-nativeintegrating-with-existing-apps.html</id><summary type="html">&lt;h1&gt;React-Native 教程 1 ： 集成React-Native到现有的iOS项目中&lt;/h1&gt;
&lt;p&gt;最近在学习React-Natvie，昨天刚刚集成到了已有的项目里面，记录一下填过的坑。&lt;/p&gt;
&lt;h1&gt;官方集成方式&lt;/h1&gt;
&lt;p&gt;对已有的项目，如果集成React-Native的话，最方便的形式是使用官方推荐的Cocoapods来集成。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://facebook.github.io/react-native/docs/embedded-app-ios.html#content"&gt;Integrating with Existing Apps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://reactnative.cn/docs/embedded-app-ios.html#content"&gt;中文翻译&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.在工程目录下新建&lt;code&gt;podfile&lt;/code&gt;，填入以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    # 取决于你的工程如何组织，你的node_modules文件夹可能会在别的地方。
    # 请将:path后面的内容修改为正确的路径。

pod &amp;#39;React&amp;#39;, :path =&amp;gt; &amp;#39;../node_modules/react-native&amp;#39;, :subspecs =&amp;gt; [
  &amp;#39;Core&amp;#39;,
  &amp;#39;RCTImage&amp;#39;,
  &amp;#39;RCTNetwork&amp;#39;,
  &amp;#39;RCTText&amp;#39;,
  &amp;#39;RCTWebSocket&amp;#39;,
  # 添加其他你想在工程中使用的依赖。
]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.使用&lt;code&gt;pod install&lt;/code&gt;来安装React-Native.&lt;/p&gt;
&lt;p&gt;3.在项目目录下使用如下命令来启动服务。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;(JS_DIR=`pwd`/ReactComponent; cd Pods/React; npm run start -- --root &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;JS_DIR&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但这样集成的话，会有一个缺点，就是在pod上的React-Native的版本还在&lt;code&gt;0.13.0-rc&lt;/code&gt;版本，但在github上的版本已经到了&lt;code&gt;0.17.0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_podrnversion.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_githubversion.png" /&gt;&lt;/p&gt;
&lt;p&gt;还有一个问题就是我们目前的工程没有使用&lt;code&gt;Cocoapod&lt;/code&gt;。那该如何手动集成呢？&lt;/p&gt;
&lt;p&gt;目前还发现一个问题，在官方有一个&lt;a href="http://facebook.github.io/react-native/docs/upgrading.html"&gt;upgrading&lt;/a&gt;页面中写了这么一段&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Upgrading to new versions of React Native will give you access to more APIs, views, developer tools and other goodies. Because React Native projects are essentially made up of an Android project, an iOS project and a JavaScript project, all combined under an npm package, upgrading can be rather tricky. But we try to make it easy for you.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;简单翻译一下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;时刻将React Native更新到最新的版本，可以获得更多API、视图、开发者工具以及其他一些好东西（译注：官方开发任务繁重，人手紧缺，几乎不会对旧版本提供维护支持，所以即便更新可能带来一些兼容上的变更，但建议开发者还是尽一切可能第一时间更新）。由于一个完整的React Native项目是由Android项目、iOS项目和JavaScript项目组成的，且都打包在一个npm包中，所以升级可能会有一些麻烦。我们会尽量简化这一流程。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;官方也建议使用最新版本，老版本没有人手进行维护。&lt;/p&gt;
&lt;h1&gt;手动集成&lt;/h1&gt;
&lt;p&gt;花了两天的时间，找到一个手动集成React-Native的方式，虽然稍微复杂一点，但可以保持使用官方的最新版本。&lt;/p&gt;
&lt;p&gt;1.由于目前的项目是使用的git管理的，可以将React-Native的仓库作为一个submodule添加到项目的仓库下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git submodule add https://github.com/facebook/react-native.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_gitsubmodule.png" /&gt;&lt;/p&gt;
&lt;p&gt;2.进入&lt;code&gt;react-native&lt;/code&gt;目录下，切换到最新发布的版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd react-native
git checkout -b 017ReleaseVersion v0.17.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_017version.png" /&gt;&lt;/p&gt;
&lt;p&gt;3.安装组件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;npm install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.在工程目录下创建js的文件夹，并创建&lt;code&gt;index.ios.js&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd ..
mkdir ReactComponent
touch ReactComponent/index.ios.js
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5.打开工程，添加React-Native相关工程。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;添加`react-native/React/React.xcodeproj`到项目中
添加`react-native/Libraries／ActionSheetIOS/RCTActionSheet.xcodeproj`到项目中
添加`react-native/Libraries／LinkingIOS/RCTLinking.xcodeproj`到项目中
添加`react-native/Libraries／Image/RCTImage.xcodeproj`到项目中
添加`react-native/Libraries／Network/RCTNetwork.xcodeproj`到项目中
添加`react-native/Libraries／Text/RCTText.xcodeproj`到项目中
添加`react-native/Libraries／WebSocket/RCTWebSocket.xcodeproj`到项目中
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_addproject.png" /&gt;&lt;/p&gt;
&lt;p&gt;6.在工程的设置页面添加需要连接到Frameworks&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_addframeworks.png" /&gt;&lt;/p&gt;
&lt;p&gt;7.添加搜索头文件的地址。在工程的&lt;code&gt;Build Settings&lt;/code&gt;找到&lt;code&gt;Header Search Paths&lt;/code&gt;，添加一条&lt;code&gt;$(SRCROOT)/react-native/React&lt;/code&gt;，选择&lt;code&gt;recursive&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_addsearchpath.png" /&gt;&lt;/p&gt;
&lt;p&gt;这样就将React-Native集成到了现有的iOS工程中了。&lt;/p&gt;
&lt;h1&gt;启动服务&lt;/h1&gt;
&lt;p&gt;使用这种方式我们该如何启动服务呢？&lt;/p&gt;
&lt;p&gt;我们先看一下Cocoapods如何启动的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;(JS_DIR=`pwd`/ReactComponent; cd Pods/React; npm run start -- --root &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;JS_DIR&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里一共执行了三条命令。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;JS_DIR=&lt;/code&gt;pwd&lt;code&gt;/ReactComponent&lt;/code&gt;找到放js的文件夹，保存到&lt;code&gt;JS_DIR&lt;/code&gt;这个变量中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd Pods/React&lt;/code&gt; 进入&lt;code&gt;react&lt;/code&gt;目录下。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run start -- --root $JS_DIR&lt;/code&gt; 将存放js文件的目录作为&lt;code&gt;--root&lt;/code&gt;参数，然后使用&lt;code&gt;npm run start&lt;/code&gt;启动服务。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们主要放React的目录不同，所以只要简单修改一下第二条命令就可以了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;(JS_DIR=`pwd`/ReactComponent; cd react-native/React; npm run start -- --root &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;JS_DIR&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_startserver.png" /&gt;&lt;/p&gt;
&lt;h1&gt;添加React-Native页面&lt;/h1&gt;
&lt;p&gt;1.在iOS工程中创建&lt;code&gt;ReactView&lt;/code&gt;类&lt;/p&gt;
&lt;p&gt;2.在&lt;code&gt;ReactView.m&lt;/code&gt;中&lt;code&gt;#import "RCTRootView.h"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.在&lt;code&gt;- (instancetype)initWithFrame:(CGRect)frame&lt;/code&gt;添加如下代码NSString * strUrl = @"http://localhost:8081/index.ios.bundle?platform=ios&amp;amp;dev=true";&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="bp"&gt;NSURL&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;jsCodeLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSURL&lt;/span&gt; &lt;span class="nl"&gt;URLWithString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;strUrl&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;RCTRootView&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rootView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;RCTRootView&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithBundleURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;jsCodeLocation&lt;/span&gt;
                                                     &lt;span class="nl"&gt;moduleName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;SimpleApp&amp;quot;&lt;/span&gt;
                                              &lt;span class="nl"&gt;initialProperties&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt;
                                                  &lt;span class="nl"&gt;launchOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;addSubview&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;rootView&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;rootView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.在ViewController的&lt;code&gt;- (void)viewDidLoad&lt;/code&gt;方法中创建&lt;code&gt;ReactView&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ReactView&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;reactView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;ReactView&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithFrame&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CGRectMake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CGRectGetWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="nl"&gt;addSubview&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;reactView&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5.我们将下面代码添加到&lt;code&gt;ReactComponent\index.ios.js&lt;/code&gt;文件中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;#39;use strict&amp;#39;;

var React = require(&amp;#39;react-native&amp;#39;);
var {
  Text,
  View,
  Image,
} = React;

var styles = React.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: &amp;#39;red&amp;#39;
  }
});

class SimpleApp extends React.Component {
  render() {
    return (
      &lt;span class="nt"&gt;&amp;lt;View&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.container}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Text&amp;gt;&lt;/span&gt;This is a simple application.&lt;span class="nt"&gt;&amp;lt;/Text&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;
    )
  }
}

React.AppRegistry.registerComponent(&amp;#39;SimpleApp&amp;#39;, () =&amp;gt; SimpleApp);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后我们运行一下程序。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://yimagecache.qiniudn.com/rn_install_runcode.png" /&gt;&lt;/p&gt;
&lt;p&gt;项目在github上面，&lt;a href="https://github.com/yangchenghu/react-native-tutorial"&gt;地址&lt;/a&gt;&lt;/p&gt;</summary><category term="react-native"></category><category term="iOS"></category><category term="App"></category><category term="integra"></category><category term="集成"></category></entry><entry><title>ReactNative Errors notes</title><link href="http://blog.chenghu.me/reactnative-errors-notes.html" rel="alternate"></link><updated>2015-12-23T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-12-23:reactnative-errors-notes.html</id><summary type="html">&lt;h1&gt;ReactNative错误记录&lt;/h1&gt;
&lt;h2&gt;View背景透明，显示出后面的image&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2016-01-07&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;from:&lt;a href="http://www.28im.com/ios/a3393211.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;headline: {
    fontSize: 20,
    textAlign: &amp;#39;center&amp;#39;,
    backgroundColor: &amp;#39;rgba(0,0,0,0)&amp;#39;,
    color: &amp;#39;white&amp;#39;
}


&lt;span class="nt"&gt;&amp;lt;View&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.container}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;Image&lt;/span&gt; 
    &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.backdrop}&lt;/span&gt; 
    &lt;span class="na"&gt;source=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://unsplash.com/photos/JWiMShWiF14/download&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="s"&gt;&amp;lt;View&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.backdropView}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;Text&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{styles.welcome}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Headline&lt;span class="nt"&gt;&amp;lt;/Text&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/Image&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;image error&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;2015-12-23 10:30:27.482 [error][tid:com.facebook.React.RCTExceptionsManagerQueue] Unhandled JS Exception: Requiring unknown module &amp;quot;image!cellicon&amp;quot;. If you are sure the module is there, try restarting the packager.
If you are sure the module is there, try restarting the packager.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="image require error" src="http://yimagecache.qiniudn.com/rn_imagerequireerror.png" /&gt;&lt;/p&gt;
&lt;p&gt;在引入image，使用require静态图片的时候，require('image!imagename')这样可以
但是，使用require('image!' + celldata.imagename)这种方式就会报这个错误&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/facebook/react-native/issues/2481#issuecomment-160603088"&gt;来源&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;</summary><category term="RN"></category></entry><entry><title>change npm source to taobao</title><link href="http://blog.chenghu.me/change-npm-source-to-taobao.html" rel="alternate"></link><updated>2015-12-21T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-12-21:change-npm-source-to-taobao.html</id><summary type="html">&lt;h1&gt;修改npm源到淘宝&lt;/h1&gt;
&lt;p&gt;镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:&lt;/p&gt;
&lt;p&gt;1.通过config命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;npm config set registry https://registry.npm.taobao.org 
npm info underscore （如果上面配置正确这个命令会有字符串response）
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.命令行指定&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;npm --registry https://registry.npm.taobao.org info underscore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.编辑 ~/.npmrc 加入下面内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;registry = https://registry.npm.taobao.org
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;搜索镜像: https://npm.taobao.org&lt;/p&gt;
&lt;p&gt;建立或使用镜像,参考: https://github.com/cnpm/cnpmjs.org&lt;/p&gt;</summary><category term="tech"></category><category term="npm"></category><category term="node"></category></entry><entry><title>GitCloneSubDirectory</title><link href="http://blog.chenghu.me/gitclonesubdirectory.html" rel="alternate"></link><updated>2015-11-23T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-11-23:gitclonesubdirectory.html</id><summary type="html">&lt;h1&gt;Git Clone子目录&lt;/h1&gt;
&lt;p&gt;今天去clone git仓库，发现仓库下包含了iOS的代码文件夹和Android的代码文件夹两个。感觉我也不会去修改Android的代码，clone下来也浪费地方，但是，svn可以只checkout一个目录，git好像只能clone整个仓库。&lt;/p&gt;
&lt;p&gt;找了一下，可以使用git的Sparse Checkout配置来只checkout单独的子目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git@gitlab:apps/myApp.git --no-checkout
cd myApp
git config core.sparsecheckout true
echo &amp;quot;iOS/&amp;quot; &amp;gt; .git/info/sparse-checkout
git checkout --
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Git"></category></entry><entry><title>MoveSVNToGit</title><link href="http://blog.chenghu.me/movesvntogit.html" rel="alternate"></link><updated>2015-11-23T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-11-23:movesvntogit.html</id><summary type="html">&lt;h1&gt;迁移SVN到Git&lt;/h1&gt;
&lt;p&gt;1.创建用户映射&lt;/p&gt;
&lt;p&gt;检出svn上所有提交过代码的用户名&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;svn log --xml | grep author | sort -u | perl -pe &amp;#39;s/.&amp;gt;(.?)&amp;lt;./$1 = /&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;author&amp;gt;&lt;/span&gt;chenghu&lt;span class="nt"&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后将这些用户名复制下来&lt;/p&gt;
&lt;p&gt;修改成以下形式，保存成user.txt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;svn用户名 ＝ git用户名 &amp;lt;git邮箱&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chenghu ＝ 小虎 &amp;lt;chenghu@chenghu.me&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.拉取SVN的commit纪录&lt;/p&gt;
&lt;p&gt;使用git-svn来拉取svn提交的记录，转换成git&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git svn clone https://SVNserver/serverpatch/trunk --authors-file=users.txt --no-metadata gitDir
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当然，如果svn上面提交记录比较多的情况下，从第一次commit开始拉会比较慢，可以使用&lt;code&gt;-r&lt;/code&gt;参数来指定开始拉取的那次svn编号开始。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git svn clone -r255:HEAD svn_repository_url
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.添加Git远程仓库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote add origin http://gitserver/apps/myapp.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.推送代码到Git仓库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就完成了从svn到git的迁移&lt;/p&gt;
&lt;p&gt;当然，一般刚迁移完，svn和git会并行一段时间，svn上提交的代码如何同步到git呢？&lt;/p&gt;
&lt;p&gt;1.拉取svn上新的提交&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git svn fetch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.合并到master分支&lt;/p&gt;
&lt;p&gt;拉取回来的代码处于一个单独的分支，可以使用 &lt;code&gt;git branch -a&lt;/code&gt;来查看，有一个&lt;code&gt;git-svn&lt;/code&gt;的分支。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git merge git-svn
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.推送代码&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;git log&lt;/code&gt;查看是否已经有了svn上最新的提交记录，好了，可以将这些更新提交到git远程仓库了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;相关文章&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/cctt_1/article/details/41317419"&gt;坑死人不偿命，svn 迁移到 git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/zhangskd/article/details/43452627"&gt;GIT版本控制 — GIT与SVN的相互转换 (三)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zengrong.net/post/1288.htm"&gt;移动git管理的svn版本库的路径&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.blogjava.net/lishunli/archive/2012/01/15/368562.html"&gt;SVN迁移到Git的过程（+ 一些技巧）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rubynroll.iteye.com/blog/203133"&gt;SVN+GIT=鱼与熊掌兼得&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ooso.net/archives/576"&gt;git svn实战&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.aikaiyuan.com/6584.html"&gt;svn 迁移到git下全过程&lt;/a&gt;&lt;/p&gt;</summary><category term="SVN"></category><category term="Git"></category></entry><entry><title>2015-11-03</title><link href="http://blog.chenghu.me/2015-11-03.html" rel="alternate"></link><updated>2015-11-03T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-11-03:2015-11-03.html</id><summary type="html">&lt;h1&gt;2015-11-03&lt;/h1&gt;
&lt;p&gt;&lt;span id="jump"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;目录&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1"&gt;今天学了什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#1.1"&gt;依赖注入&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#1.2"&gt;学习如何学习&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2"&gt;精品文章&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#2.1"&gt;不是每个人都 “贪便宜” 的，做好目标客户定位及宣传方向的选择&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#2.2"&gt;从技术到产品，转型的这一年我明白了很多道理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#2.3"&gt;雷军谈未来十年的移动创业机会&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#2.4"&gt;如果你的竞争对手获得融资了你该怎么办？&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#3"&gt;游记&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#3.1"&gt;泰国旅游生活点滴记录 篇二：出发前准备&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#3.2"&gt;美国东西部风景掠影&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#3.3"&gt;十一不怕堵自驾狂奔&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#4"&gt;阅读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#4.1"&gt;你以为差的只是一个程序员？其实是缺一种跨界沟通能力&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#4.2"&gt;caoz：让一部分人尖叫，另一部分人离开的才是好产品&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#4.3"&gt;接住了，这是Twitter、Facebook、LinkedIn产品经理的管理心得&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#4.4"&gt;你需要远离具有这八种特征的创业伙伴&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2 id="1"&gt; 学习 &lt;/h2&gt;

&lt;h3 id="1.1"&gt;依赖注入&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://blog.csdn.net/linshaolie/article/details/47037941"&gt;依赖注入——让iOS代码更简洁&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两种注入的方式，1.初始化方法注入；2.属性注入&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/yqj2065/article/details/8510074"&gt;1.2 依赖注入（Dependency Injection）模式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/atomicobject/objection"&gt;objection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://limboy.me/ios/2014/04/15/use-objection-to-decouple-ios-project.html"&gt;使用objection来模块化开发iOS项目&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要就是使用&lt;code&gt;objection&lt;/code&gt;这个框架，然后使用&lt;code&gt;protocol&lt;/code&gt;来声明需要引入的类的接口，然后使用一个&lt;code&gt;JSObjectionModule&lt;/code&gt;来注册那个类，这样就可以只引入这个协议，而不用import整个类文件进来，减少文件之间的耦合性。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wiki.jikexueyuan.com/project/objc/test/15-3.html"&gt;依赖注入&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是一篇极客学院的一篇文章，但写的就比较偏向测试方向了。&lt;/p&gt;
&lt;p&gt;但给了我一点其它的启发：就是可以把一些调用拆的更细一些。最近在使用&lt;code&gt;JSPatch&lt;/code&gt;这个框架，它可与替换程序中已有的方法和创建新的方法，以前我一个方法里面好多行，如果可以拆的比较细，其中有一个方法有的问题，也比较好修复。特别大的方法修起来也比较麻烦。&lt;/p&gt;
&lt;h3 id="1.2"&gt;学习如何学习&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://limboy.me/essay/2015/08/14/learning-how-to-learn.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;值得思考的一篇文章，学习学习学习，重要的事情要说三遍。&lt;/p&gt;
&lt;p&gt;以下摘要，及笔记&lt;/p&gt;
&lt;p&gt;大脑有两种工作模式。一个是&lt;code&gt;专注&lt;/code&gt;，另一个是&lt;code&gt;发散&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;比如，你已经知道了乘法，然后要处理一道乘法运算题。当你处于「专注」模式时，会运用已有的模型，在「乘法」的槽点附近打转，也就是结合以前的学习经验去寻找答案。如果你要解决的问题是基于新的模型，比如你已经知道了乘法运算，但从没有接触过除法运算，如何掌握这个新的模型呢，这时就要用到「发散」了。当处于「发散」状态时，「槽点」之间的距离会变大，你无法通过局限在某一点来解决问题，但至少能找到一种新的思考事物的角度。当你在解决一个非常困难的问题时，不要逼自己长时间处于「专注」状态，这样就会局限在一个狭小的范围。所以需要进入到另一种模式，也就是「发散」模式。简单来说，就是脱离当前的工作环境，出去走走，冲个澡等，总之是让大脑脱离「专注」状态。我们来举一个例子吧。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;拖延症 --- 番茄工作法，以&lt;code&gt;必须完成它&lt;/code&gt;的痛苦。&lt;/p&gt;
&lt;p&gt;还有跟学习很相关的一点是&lt;code&gt;睡眠&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;当处于非睡眠状态时，代谢物会在细胞间产生，它们就像垃圾一样在那，而且越积越多，这会影响你的判断。这也是为什么当你长时间工作时，逻辑会越来越乱。当你睡觉时，这些细胞会缩小，然后垃圾就被冲走了，就像重新打扫了房间一样

根据神经学上的发现，将学习分为多个短期学习、睡觉，多个短期学习、睡觉，这样的循环系统，对于构建神经网络非常有帮助，这也是高效学习的秘诀之一
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;有两种方式可以让这些神经元存活并成长。一个就是将自己暴露在新的环境中 － 旅游；另一个方法就是锻炼。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;工作记忆&lt;/code&gt;就是临时记住一些信息。减少打断，减少上下文切换，减少并发。&lt;/p&gt;
&lt;p&gt;那如何把短期记忆变成长期记忆：最好的方法就是练习，练得越多，神经元就会长得越长，扎得越深。最好的方式就是带一定间隙的重复练习。&lt;/p&gt;
&lt;p&gt;关于学习的建议：&lt;/p&gt;
&lt;p&gt;1.测试是必要且重要的。&lt;/p&gt;
&lt;p&gt;2.记得做「家庭作业」，不要只做一次，挑其中的重点多做几次。&lt;/p&gt;
&lt;p&gt;3.最有效的方法还是「回想」。&lt;/p&gt;
&lt;p&gt;4.还有一个简单的技巧是向其他人阐述你所理解的东西。&lt;/p&gt;
&lt;h2 id="2"&gt; 精品文章 &lt;/h2&gt;

&lt;h3 id="2.1"&gt;不是每个人都 “贪便宜” 的，做好目标客户定位及宣传方向的选择 [精品]&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039237.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:营销&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;关于“营销和市场”&lt;/p&gt;
&lt;p&gt;1.目标用户要明确范围，不要指望能覆盖所有人。&lt;/p&gt;
&lt;p&gt;2.宣传的点，既要提高用户的期待，也要控制用户的期待。正面例子：小米手机，早期价格便宜，用户期望低，但用下来感觉物超所值。反面例子：锤子手机，讲了一通情怀，用户期望上来了，结果拿到手机各种挑刺。&lt;/p&gt;
&lt;p&gt;3.保留惊喜，形成口碑。&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="2.2"&gt;从技术到产品，转型的这一年我明白了很多道理&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039205.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:产品&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;看到文章后是震惊，之前一直因为技术关注了作者&lt;code&gt;唐韧&lt;/code&gt;，没想到在36kr发表了如此干货的文章，然后华丽转行到产品。想想自己也总说自己有产品感觉，却也就止步在感觉了 T_T。&lt;/p&gt;
&lt;p&gt;思维转变&lt;/p&gt;
&lt;p&gt;1.工程思维&lt;/p&gt;
&lt;p&gt;即还是从一个工程师的角度来思考需求，感觉这个功能技术很炫，加上肯定会提高逼格。然后这并没有什么卵用。最大的问题是&lt;code&gt;脱离实际&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;我在一开始从技术模式切换到产品模式时，相当一段时间都是在通过技术定义和设计产品，这个时候的产品脱离现实场景，远离用户需求，我开始反思。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;2.功能思维&lt;/p&gt;
&lt;p&gt;关注产品的功能和体验，忽略了业务目标和业务价值，忽略了与其它业务的互动。&lt;/p&gt;
&lt;p&gt;3.产品思维&lt;/p&gt;
&lt;p&gt;&lt;em&gt;产品思维，也是我目前所处的阶段，这个阶段我关注的更多的是业务价值和业务目标，在充分理解商业战略的前提下来完成产品定义和产品设计，通过充分了解产品所围绕的业务场景去提升产品的可用性和易用性，改善业务体验和产品体验，提升整体的用户体验&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;产品思维还有一个非常重要的环节就是对业务流程的设计，产品经理为最终的产品质量和用户体验负责，在设计前期就需要考虑产品从设计到开发到最终投入使用需要经历哪些环节，需要与哪些人进行合作。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;产品方法&lt;/p&gt;
&lt;p&gt;1.定义产品战略&lt;/p&gt;
&lt;p&gt;2.梳理业务流程&lt;/p&gt;
&lt;p&gt;3.产品原型设计&lt;/p&gt;
&lt;p&gt;4.沟通协调资源&lt;/p&gt;
&lt;p&gt;5.验证改进产品&lt;/p&gt;
&lt;p&gt;作者的思维变化是一个从点到线，再到面的变化。后面总结的产品方法又是一个从宏观到微观的总结。&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="2.3"&gt;雷军谈未来十年的移动创业机会&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039202.html"&gt;原文&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;tag:创业&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;个人觉得，在各个大佬中的讲话中，雷军算是说的比较实在的，不画饼，不玩虚的，比较接底气。&lt;/p&gt;
&lt;p&gt;前十年，由于爱玩手机，发现了移动互联网这个大趋势，成立了小米公司。&lt;/p&gt;
&lt;p&gt;当前，BAT很强大，移动互联网第一阶段结束，但还是有机会的。&lt;/p&gt;
&lt;p&gt;后十年，智能家居，农村互联网，农村电商，移动互联网的企业管理 这些方向还是很有机会的。&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="2.4"&gt;如果你的竞争对手获得融资了你该怎么办？&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039054.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:创业&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;之前看到&lt;code&gt;滴滴打车获得30亿的投资&lt;/code&gt;，我就在想这个问题，如果我当时也在做打车业务，我该怎么面对如此强大的对手，是换方向；或是把手上现金给大家分一下，各回各家；还是硬扛呢。&lt;/p&gt;
&lt;p&gt;看了一下，主要下面几件事情&lt;/p&gt;
&lt;p&gt;1.安抚员工。&lt;/p&gt;
&lt;p&gt;2.告知投资人，然后拿出后续自己的计划。&lt;/p&gt;
&lt;p&gt;3.不要慌忙应对，比如加快融资，还是要保持自己的节奏。&lt;/p&gt;
&lt;p&gt;4.快速回归自己的日常工作。将注意力放到业务上。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="3"&gt; 游记 &lt;/h2&gt;

&lt;h3 id="3.1"&gt;泰国旅游生活点滴记录 篇二：出发前准备 &lt;/h3&gt;

&lt;p&gt;&lt;a href="http://post.smzdm.com/p/363802/"&gt;原文&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;tag:旅游&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;主要讲了一些出去玩的时候要注意的地方，比较实用的&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="3.2"&gt;美国东西部风景掠影&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://post.smzdm.com/p/347862/"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:旅游&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="3.3"&gt;十一不怕堵自驾狂奔&lt;/h3&gt;

&lt;p&gt;[十一不怕堵自驾狂奔 篇一：自驾狂奔天津-青海湖-祁连山 4800公里]&lt;/p&gt;
&lt;p&gt;&lt;a href="http://post.smzdm.com/p/363694"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[十一不怕堵自驾狂奔 篇二：湟源县-青海湖-茶卡盐湖-刚察县热水镇]&lt;/p&gt;
&lt;p&gt;&lt;a href="http://post.smzdm.com/p/363956"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[十一不怕堵自驾狂奔 篇三：刚察县热水河镇-张掖市-武威市-定边县-天津市]&lt;/p&gt;
&lt;p&gt;&lt;a href="http://post.smzdm.com/p/365174/"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:旅游&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="4"&gt; 阅读 &lt;/h2&gt;

&lt;hr /&gt;
&lt;h3 id="4.1"&gt;你以为差的只是一个程序员？其实是缺一种跨界沟通能力&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039141.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="4.2"&gt;caoz：让一部分人尖叫，另一部分人离开的才是好产品&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039049.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:产品&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="4.3"&gt;接住了，这是Twitter、Facebook、LinkedIn产品经理的管理心得&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://www.huxiu.com/article/129783/1.html?f=wangzhan"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:产品&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="4.4"&gt;你需要远离具有这八种特征的创业伙伴&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://36kr.com/p/5039235.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tag:创业&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;1、你不想要一个满嘴跑火车，但却没有良好记录的合作伙伴。&lt;/p&gt;
&lt;p&gt;2、你不希望你的合作伙伴前后不一致。&lt;/p&gt;
&lt;p&gt;3、你不希望你的合作伙伴不擅于与人交往。&lt;/p&gt;
&lt;p&gt;4、你不想要一个你的雇员们都仇恨的合作伙伴。&lt;/p&gt;
&lt;p&gt;5、你不想要你的合作伙伴同时做着很多个额外项目。&lt;/p&gt;
&lt;p&gt;6、你不想要个比你更傲慢的合作伙伴。&lt;/p&gt;
&lt;p&gt;7、你不想要个跟你平起平坐的合作伙伴。&lt;/p&gt;
&lt;p&gt;8、你不想要个只会同意你说的一切的合作伙伴。&lt;/p&gt;
&lt;p&gt;&lt;a href="#jump"&gt;回到顶端&lt;/a&gt;&lt;/p&gt;</summary><category term="Note"></category></entry><entry><title>output Rss Full content</title><link href="http://blog.chenghu.me/output-rss-full-content.html" rel="alternate"></link><updated>2015-10-22T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-10-22:output-rss-full-content.html</id><summary type="html">&lt;h1&gt;Rss输出全文&lt;/h1&gt;
&lt;p&gt;自从下载了mac下的&lt;code&gt;reeder&lt;/code&gt;，烧了FeedHQ，又开始对Rss开始迷恋了&lt;/p&gt;
&lt;p&gt;但发现有些Rss只能输出摘要，这个比较麻烦，还得去再点击一下，去访问网页的内容&lt;/p&gt;
&lt;p&gt;Reeder自动缓存的优势根本无法发挥。&lt;/p&gt;
&lt;p&gt;想了一个办法，就是用python，解析源Rss的路径，分析出链接，进入该链接，分析出文章的内容，然后将内容插入 &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;这个节点后面，命名为&lt;code&gt;&amp;lt;content:encoded&amp;gt;&lt;/code&gt;。这样Rss阅读器就可以识别全文了。&lt;/p&gt;
&lt;p&gt;在搜索 python 解析Rss的时候，发现下面几个链接，分享个大家，可以做参考。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.freezhongzi.info/?p=118"&gt;全文RSS输出程序&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/lbzhung/full_text_rss"&gt;full_text_rss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/shoaly/2rss"&gt;2rss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ruanyifeng.com/blog/2010/04/the_solution_of_full_text_feed.html"&gt;全文Feed的终极解决方案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://phyng.com/2014-10-01-rss-xml.html"&gt;Python 处理 XML/RSS 的一些经验&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fivefilters.org/content-only/"&gt;fivefilters.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://developer.51cto.com/art/201002/185399.htm"&gt;浅析Python RSS文件功能介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wuchong.me/blog/2014/04/24/easy-web-scraping-with-python/"&gt;使用 Python 轻松抓取网页&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Setup L2TP And IPSEC VPN</title><link href="http://blog.chenghu.me/setup-l2tp-and-ipsec-vpn.html" rel="alternate"></link><updated>2015-09-23T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-09-23:setup-l2tp-and-ipsec-vpn.html</id><summary type="html">&lt;h1&gt;搭建L2TP和IPSEC的VPN&lt;/h1&gt;
&lt;p&gt;本来家里用的长城宽带，结果通过IP138一看，居然是“鹏博士宽带”&lt;/p&gt;
&lt;p&gt;这个碉堡了的鹏博士屏蔽各种梯子&lt;/p&gt;
&lt;p&gt;之前在东京的一个梯子，只要一ssh过去，梯子就消失了，ping都ping不通&lt;/p&gt;
&lt;p&gt;最后只好把梯子搬到了法国，延时直接翻倍了，悲剧&lt;/p&gt;
&lt;p&gt;最近发现拨公司的L2TP很流畅，就想在梯子上搭建一个L2TP&lt;/p&gt;
&lt;p&gt;搜了一下，找到一个比较便捷的方法&lt;/p&gt;
&lt;p&gt;在github上找到一个&lt;a href="https://github.com/philplckthun/setup-simple-ipsec-l2tp-vpn"&gt;脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按操作走&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget https://raw.github.com/philplckthun/setup-simple-ipsec-l2tp-vpn/master/setup.sh
sudo sh setup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;按提示一步一步的设置PSK,Username,Password。&lt;/p&gt;
&lt;p&gt;结果提示&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/bin/bash: xmlto: commad not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="http://yimagecache.qiniudn.com/67WIP9PO=0/H$PHA{VC2C$7.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;好吧，只好&lt;code&gt;apt-get install xmlto&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结果一看&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="http://yimagecache.qiniudn.com/afzicouvyofadkhqjhrklnfaldkhafquvopcuyv.png" /&gt;&lt;/p&gt;
&lt;p&gt;要占1G多硬盘，有点坑啊，果断点&lt;code&gt;n&lt;/code&gt;啊&lt;/p&gt;
&lt;p&gt;那就自己搞了&lt;/p&gt;
&lt;p&gt;自己用&lt;code&gt;apt-get install openwan&lt;/code&gt;来安装&lt;code&gt;openwan&lt;/code&gt;实现ipsec&lt;/p&gt;
&lt;p&gt;结果还是遇到了自己之前一直卡住的问题&lt;/p&gt;
&lt;p&gt;就是在使用&lt;code&gt;sudo ipsec verify&lt;/code&gt;的时候总是有一项过不去检测&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Two or more interfaces found, checking IP forwarding [failed]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;继续google&lt;/p&gt;
&lt;p&gt;找到豆瓣小组上一个&lt;a href="http://www.douban.com/note/266076883/"&gt;帖子&lt;/a&gt;，说自己重新编译一下&lt;code&gt;opnwan&lt;/code&gt;就好了&lt;/p&gt;
&lt;p&gt;好吧，继续笔记&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd /usr/src
wget http://www.openswan.org/download/openswan-2.6.43.1.tar.gz
tar xf openswan-2.6.43.1.tar.gz
cd openswan-2.6.43.1
make programs
make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再&lt;code&gt;ipsec verify&lt;/code&gt;，结果。。。。。又有问题&lt;/p&gt;
&lt;p&gt;&lt;img alt="image3" src="http://yimagecache.qiniudn.com/openwanerrortip.png" /&gt;&lt;/p&gt;
&lt;p&gt;中间搞了iptables好多次，重启了n次&lt;/p&gt;
&lt;p&gt;想想中间两个&lt;code&gt;NOT IMPLEMENTED&lt;/code&gt;实在搞不了&lt;/p&gt;
&lt;p&gt;再重启一遍吧&lt;/p&gt;
&lt;p&gt;电脑连接了一下，居然成功了&lt;/p&gt;
&lt;p&gt;去ip138看了一下，也出去了&lt;/p&gt;
&lt;p&gt;回家看看能不能穿越鹏博士&lt;/p&gt;
&lt;p&gt;备份：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service ipsec-assist stop
sudo service ipsec-assist start
sudo service ipsec-assist restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回家更新：&lt;/p&gt;
&lt;p&gt;好吧，在强大的鹏博士面前，所有梯子都是渣，只有局域网，没有互联网&lt;/p&gt;
&lt;p&gt;L2TP  .........  找不到服务器&lt;/p&gt;
&lt;p&gt;PPTP  .........  找不到服务器&lt;/p&gt;
&lt;p&gt;SSH隧道  .........  没反应&lt;/p&gt;
&lt;p&gt;shadowsocks  ..........  卡到死&lt;/p&gt;
&lt;p&gt;Anyconnect  ..........  连上就断开&lt;/p&gt;
&lt;p&gt;刚找了一个手机上的&lt;/p&gt;
&lt;p&gt;天行vpn  ..........  VPN服务器未响应&lt;/p&gt;
&lt;p&gt;shadowsocks  .........  卡到爆&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;下期预告：&lt;/p&gt;
&lt;p&gt;之前用&lt;code&gt;docker-ocserv&lt;/code&gt;搭建的ocserv服务器这几天老自动断开连接，而且上不了instagram，还是自己重新搭建一下吧。&lt;/p&gt;</summary><category term="l2tp"></category><category term="ipsec"></category><category term="vpn"></category></entry><entry><title>Git operation</title><link href="http://blog.chenghu.me/git-operation.html" rel="alternate"></link><updated>2015-08-08T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-08-08:git-operation.html</id><summary type="html">&lt;h1&gt;Git 操作&lt;/h1&gt;
&lt;p&gt;最近使用git比较多，记录几个常见点git的相关操作&lt;/p&gt;
&lt;p&gt;1.遇到了一次代码冲突&lt;/p&gt;
&lt;p&gt;error: Your local changes to the following files would be overwritten by merge:
        projectpath/xxxxx.xcodeproj/project.pbxproj
Please, commit your changes or stash them before you can merge.&lt;/p&gt;
&lt;p&gt;找了一下，说是代码冲突了，我的修改也不能忽略，那怎么搞&lt;/p&gt;
&lt;p&gt;git stash
git pull
git stash pop&lt;/p&gt;
&lt;p&gt;这样就保留了本地的修改，然后去处理冲突了&lt;/p&gt;
&lt;p&gt;2.放弃本地处理&lt;/p&gt;
&lt;p&gt;在当前代码上调bug，加了好多测试代码，如果丢弃本地的这些修改呢？&lt;/p&gt;
&lt;p&gt;git reset --hard
git pull&lt;/p&gt;
&lt;p&gt;这样就将本地的修改清除了&lt;/p&gt;
&lt;p&gt;3.撤销一次commit&lt;/p&gt;
&lt;p&gt;在提交代码的时候，误将一个图片压缩包提交进去了。赶紧删除掉，再commit一次，结果git push的时候，上一次的commit还是要提交到服务器的，我去100+M的图片压缩包要上到服务器，以后team成员更新的时候都要先拉这个图片包，而且每个人的本地仓库也包含这个压缩包，想想就恐怖。&lt;/p&gt;
&lt;p&gt;怎么撤销commit呢&lt;/p&gt;
&lt;p&gt;可以使用git log 查看commit日志&lt;/p&gt;
&lt;p&gt;commit e84fd9b2c3e027a9f8a95af770fdfef9c99224df
Merge: 47cd9d1 e57c182
Author: 
Date:   Fri Aug 7 18:44:23 2015 +0800&lt;/p&gt;
&lt;p&gt;commit 47cd9d1d42eb9b2fbea6ec06cdfa358b8e5fcded
Author: 
Date:   Fri Aug 7 18:43:55 2015 +0800&lt;/p&gt;
&lt;p&gt;commit e57c1822b3d8359500496257a506c9fdf259adb1
Author: 
Date:   Fri Aug 7 18:35:24 2015 +0800&lt;/p&gt;
&lt;p&gt;确定要撤销哪一次commit，找到相应的commit ID&lt;/p&gt;
&lt;p&gt;执行 &lt;/p&gt;
&lt;p&gt;git reset --hard commit ID&lt;/p&gt;
&lt;p&gt;git push origin HEAD --force&lt;/p&gt;
&lt;p&gt;就可以了&lt;/p&gt;
&lt;p&gt;当然，更详细的操作可以参见下面的链接&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bootcss.com/p/git-guide/"&gt;git - 简易指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;几个速成教程&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Mark24Code/15minGit"&gt;15分钟学会使用Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/qinjx/30min_guides/blob/master/ios.md"&gt;iOS开发60分钟入门&lt;/a&gt;&lt;/p&gt;</summary><category term="Git"></category></entry><entry><title>Objective-C Selector Methods</title><link href="http://blog.chenghu.me/objective-c-selector-methods.html" rel="alternate"></link><updated>2015-04-26T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-04-26:objective-c-selector-methods.html</id><summary type="html">&lt;h1&gt;在Objective-C中对Selector的操作&lt;/h1&gt;
&lt;p&gt;今天调试程序中的一个bug，iOS6版本系统中使用&lt;code&gt;NSUserDefaults&lt;/code&gt;类的&lt;code&gt;initWithSuiteName&lt;/code&gt;方法会crash&lt;/p&gt;
&lt;p&gt;想起来可以判断&lt;code&gt;NSUserDefaults&lt;/code&gt;是否响应&lt;code&gt;initWithSuiteName&lt;/code&gt;这个方法来不同调用。&lt;/p&gt;
&lt;p&gt;使用了&lt;code&gt;respondsToSelector&lt;/code&gt;这个类方法，以为没有问题，结果没有进入这个if里面，居然判断失败了&lt;/p&gt;
&lt;p&gt;好吧，那就把关于Selector的所有的方法都整理一下，以免以后再使用错误了。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;+(BOOL)respondsToSelector:(SEL)aSelector;&lt;/p&gt;
&lt;p&gt;判断该类是否响应类方法。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;-(BOOL)respondsToSelector:(SEL)aSelector;&lt;/p&gt;
&lt;p&gt;判断实例是否响应该方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;userDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;userDefault&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;objectForKey&lt;/span&gt;&lt;span class="p"&gt;:)]){&lt;/span&gt;
    &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;+(BOOL)instancesRespondToSelector:(SEL)aSelector;&lt;/p&gt;
&lt;p&gt;判断该类的实例是否响应该方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="nl"&gt;instancesRespondToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;initWithSuiteName&lt;/span&gt;&lt;span class="p"&gt;:)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;+(IMP)instanceMethodForSelector:(SEL)aSelector&lt;/p&gt;
&lt;p&gt;获取该类的实例方法的IMP实现的地址&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kt"&gt;IMP&lt;/span&gt; &lt;span class="n"&gt;kIMPForUserDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="nl"&gt;instanceMethodForSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;initWithUser&lt;/span&gt;&lt;span class="p"&gt;:)];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;+(BOOL)resolveInstanceMethod:(SEL)aSelector&lt;/p&gt;
&lt;hr /&gt;</summary><category term="Objective-C"></category><category term="Selector"></category></entry><entry><title>Add Shell Alias</title><link href="http://blog.chenghu.me/add-shell-alias.html" rel="alternate"></link><updated>2015-03-25T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-25:add-shell-alias.html</id><summary type="html">&lt;h1&gt;在Mac下使用Shell的Aliax&lt;/h1&gt;
&lt;p&gt;今天使用&lt;code&gt;pod update&lt;/code&gt;更新所有框架，好慢好慢&lt;/p&gt;
&lt;p&gt;搜了一下，可以使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pod install --verbose --no-repo-update
pod update --verbose --no-repo-update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来更新工程中的框架，而不更新pod库&lt;/p&gt;
&lt;p&gt;试了一下，好一些了&lt;/p&gt;
&lt;p&gt;但是命令好长，记不住&lt;/p&gt;
&lt;p&gt;想起来在linux中可以设置alias&lt;/p&gt;
&lt;p&gt;就找了一下，如何在Mac中设置alias，找了一篇&lt;a href="http://blog.csdn.net/ithomer/article/details/33339071"&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;试了一下，可以使用，记录如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编辑&lt;code&gt;~/.bash_profile&lt;/code&gt;这个文件&lt;code&gt;vim ~/.bash_profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;插入&lt;code&gt;alias podinstallfast="pod install --verbose --no-repo-update"&lt;/code&gt;和&lt;code&gt;alias podupdatefast="pod update --verbose --no-repo-update"&lt;/code&gt;这两行&lt;/li&gt;
&lt;li&gt;保存文件&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;source ~/.bash_profile&lt;/code&gt;来让bash重新载入配置，就可以使用&lt;code&gt;podinstallfast&lt;/code&gt;或&lt;code&gt;podupdatefast&lt;/code&gt;来快速更新&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;over&lt;/p&gt;</summary><category term="Shell"></category><category term="Alias"></category></entry><entry><title>Add Shell Alias on mac</title><link href="http://blog.chenghu.me/add-shell-alias-on-mac.html" rel="alternate"></link><updated>2015-03-25T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-25:add-shell-alias-on-mac.html</id><summary type="html">&lt;h1&gt;在Mac下使用Shell的Aliax&lt;/h1&gt;
&lt;p&gt;over&lt;/p&gt;</summary><category term="Shell"></category><category term="Alias"></category></entry><entry><title>iOS Anti Fildder Capture Https Data</title><link href="http://blog.chenghu.me/ios-anti-fildder-capture-https-data.html" rel="alternate"></link><updated>2015-03-18T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-18:ios-anti-fildder-capture-https-data.html</id><summary type="html">&lt;p&gt;Connect Anti Fiddler Captuer
Tags: iOS,Https,SSL,Fiddler,Capture
Category: Tech&lt;/p&gt;
&lt;h1&gt;iOS https内容防止fiddler抓包&lt;/h1&gt;
&lt;p&gt;昨天老板给提了一个bug&lt;/p&gt;
&lt;p&gt;“你的App虽然走了https来防止抓包，但是通过Fiddler还是可以进行中间人攻击，能不能解决？”&lt;/p&gt;
&lt;p&gt;老板的需求能不解决＝。＝，开玩笑了&lt;/p&gt;
&lt;p&gt;今天开始找资料&lt;/p&gt;
&lt;p&gt;我所有的网络请求都是走的AFNetworking，找到很多AFNetworking使用&lt;code&gt;AFSecurityPolicy&lt;/code&gt;来进行证书验证的文档。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ceyang.me/an-quan-lian-jie/"&gt;HTTP请求的安全连接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章主要讲导入证书，然后去比较&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/koujiaonuhan/p/ssl-pinning-with-afnetworking-2x.html"&gt;AFNetworking 2.x 的SSL身份认证&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章也是走的导入公钥进行比对&lt;/p&gt;
&lt;p&gt;&lt;a href="http://oncenote.com/2014/10/21/Security-1-HTTPS/"&gt;iOS安全系列之一：HTTPS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章讲了验证的步骤
 1. 验证的信任对象
 2. 使用系统默认验证方式验证Trust Object
 3. 使用Trust Object生成一份凭证
 4. 本地导入证书，验证Trust Object与导入的证书是否匹配
 5. 根据结果去continue还是cancel&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;看了几篇文章，发现主要是讲证书信息导入到&lt;code&gt;AFSecurityPolicy&lt;/code&gt;，然后将设置好的&lt;code&gt;AFSecurityPolicy&lt;/code&gt;设置到&lt;code&gt;AFHTTPRequestOperationManager&lt;/code&gt;的实例中，然后AFNetworking会自动处理。&lt;/p&gt;
&lt;p&gt;但是我的网络框架中没有使用默认的&lt;code&gt;AFHTTPRequestOperationManager&lt;/code&gt;来管理，使用的自己的&lt;code&gt;NSOperationQueue&lt;/code&gt;来组织的。&lt;/p&gt;
&lt;p&gt;后来想想&lt;code&gt;AFNetworking&lt;/code&gt;底层也是走的&lt;code&gt;NSURLConnicetion&lt;/code&gt;，那就研究一下&lt;code&gt;NSURLConnicetion&lt;/code&gt;对Https的处理。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;NSURLConnicetion&lt;/code&gt;的&lt;code&gt;- (void)connection:(NSURLConnection *)connection
willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge&lt;/code&gt;这个方法里。&lt;/p&gt;
&lt;p&gt;当然&lt;code&gt;AFNetworking&lt;/code&gt;里面的&lt;code&gt;AFHTTPRequestOperation&lt;/code&gt;有一个block&lt;code&gt;setWillSendRequestForAuthenticationChallengeBlock:^(NSURLConnection *connection, NSURLAuthenticationChallenge *challenge)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以，只要&lt;code&gt;NSURLConnicetion&lt;/code&gt;里面可以处理https证书就可以了。&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;先试试网上的方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//1)获取trust object&lt;/span&gt;
&lt;span class="n"&gt;SecTrustRef&lt;/span&gt; &lt;span class="n"&gt;trust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protectionSpace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;SecTrustResultType&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//注意：这里将之前导入的证书设置成下面验证的Trust Object的anchor certificate&lt;/span&gt;
&lt;span class="n"&gt;SecTrustSetAnchorCertificates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__bridge&lt;/span&gt; &lt;span class="n"&gt;CFArrayRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trustedCertificates&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//2)SecTrustEvaluate会查找前面SecTrustSetAnchorCertificates设置的证书或者系统默认提供的证书，对trust进行验证&lt;/span&gt;
&lt;span class="n"&gt;OSStatus&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustEvaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;errSecSuccess&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultProceed&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultUnspecified&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;//3)验证成功，生成NSURLCredential凭证cred，告知challenge的sender使用这个凭证来继续连接&lt;/span&gt;
    &lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="nl"&gt;credentialForTrust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;useCredential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="nl"&gt;forAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;//5)验证失败，取消这次验证流程&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;cancelAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;结果还是可以用Fiddler来抓包，失败&lt;/p&gt;
&lt;p&gt;看来这种方式还是没有成功 ＝。＝&lt;/p&gt;
&lt;p&gt;继续&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;再尝试内置https公钥来处理，先想办法拿到公钥&lt;/p&gt;
&lt;p&gt;找了一下，找到一个链接，&lt;a href="http://stackoverflow.com/questions/16694280/ssl-pinning-on-ios"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;SecTrustRef&lt;/span&gt; &lt;span class="n"&gt;serverTrust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protectionSpace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;SecCertificateRef&lt;/span&gt; &lt;span class="n"&gt;certificate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustGetCertificateAtIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="bp"&gt;NSData&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;remoteCertificateData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CFBridgingRelease&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SecCertificateCopyData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;certificate&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;Remote Certificate Data Length: %ld&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;remoteCertificateData&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;strPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="nl"&gt;stringWithFormat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;%@/cer.cer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DOCUMENTS_PATH&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;remoteCertificateData&lt;/span&gt; &lt;span class="nl"&gt;writeToFile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;strPath&lt;/span&gt; &lt;span class="nl"&gt;atomically&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就将拿到的服务器的公钥写到本地了&lt;/p&gt;
&lt;p&gt;然后将这个证书内置到工程里&lt;/p&gt;
&lt;p&gt;依然在这个block里面做处理&lt;/p&gt;
&lt;p&gt;只要比对这两个证书是否一致就好了&lt;/p&gt;
&lt;p&gt;这次是可以了&lt;/p&gt;
&lt;p&gt;但是。。。。。。。老板说，咱们的https证书8月份就过期了，到时候公钥就变了，需要更新版本才可以，有没有不内置公钥的办法&lt;/p&gt;
&lt;p&gt;好吧，办法总比问题多，继续&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;尝试比对传过来的公钥的的CA&lt;/p&gt;
&lt;p&gt;找了一下，找到一个链接，&lt;a href="https://gist.github.com/JacksonTian/5855751"&gt;这里&lt;/a&gt;中的&lt;code&gt;验证证书&lt;/code&gt;段落。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_sslCACertificatieData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 根据二进制内容提取证书信息&lt;/span&gt;
    &lt;span class="n"&gt;SecCertificateRef&lt;/span&gt; &lt;span class="n"&gt;caRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecCertificateCreateWithData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__bridge&lt;/span&gt; &lt;span class="n"&gt;CFDataRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;_sslCACertificatieData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// 形成钥匙链&lt;/span&gt;
    &lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;chain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="nl"&gt;arrayWithObject&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="k"&gt;__bridge&lt;/span&gt; &lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;caRef&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

    &lt;span class="n"&gt;CFTypeRef&lt;/span&gt; &lt;span class="n"&gt;caChainArrayRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CFBridgingRetain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// 取出服务器证书&lt;/span&gt;
    &lt;span class="n"&gt;SecTrustRef&lt;/span&gt; &lt;span class="n"&gt;trust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt; &lt;span class="n"&gt;protectionSpace&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;serverTrust&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;SecTrustResultType&lt;/span&gt; &lt;span class="n"&gt;trustResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// 设置为我们自有的CA证书钥匙连&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustSetAnchorCertificates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caChainArrayRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;noErr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// 用CA证书验证服务器证书&lt;/span&gt;
        &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SecTrustEvaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;trustResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// 检查结果&lt;/span&gt;
    &lt;span class="kt"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;trusted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;noErr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;trustResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultProceed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trustResult&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;kSecTrustResultUnspecified&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trusted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//3)验证成功，生成NSURLCredential凭证cred，告知challenge的sender使用这个凭证来继续连接&lt;/span&gt;
        &lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSURLCredential&lt;/span&gt; &lt;span class="nl"&gt;credentialForTrust&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;trust&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;useCredential&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cred&lt;/span&gt; &lt;span class="nl"&gt;forAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt; &lt;span class="nl"&gt;cancelAuthenticationChallenge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;challenge&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这次试了一下，也可以防止别人使用Fiddler抓包&lt;/p&gt;
&lt;p&gt;但是。。。。。老板说，是比内置公钥好多了，只要到时候不更换https证书的厂家的话，ca的有效期还是比较长的，能不能不内置CA，使用系统内置的CA来判断呢？&lt;/p&gt;
&lt;p&gt;好吧，想着办法总比问题多，继续搞&lt;/p&gt;
&lt;p&gt;加载CA的又一篇文章&lt;/p&gt;
&lt;p&gt;&lt;a href="http://robnapier.net/pinning-your-ssl-certs"&gt;Pinning Your SSL Certs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;----- 分割线 ------&lt;/p&gt;
&lt;p&gt;那只能看看能不能读取出来公钥x509里面的信息来做判断了&lt;/p&gt;
&lt;p&gt;找了下，说可以加openssl的框架来验证x509证书&lt;/p&gt;
&lt;p&gt;看了几篇文档&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/15836484/how-to-verify-a-x509-certificate-in-c"&gt;How to verify a X509 certificate in C&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/8850524/seccertificateref-how-to-get-the-certificate-information"&gt;SecCertificateRef: How to get the certificate information?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/15438257/ios-verifying-a-file-with-a-certificate-and-signature-public-key-is-wrong-ve"&gt;iOS: Verifying a File With a Certificate and Signature - Public Key is Wrong, Verification Fails&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/6402442/iphone-development-verify-the-certificate-information-from-a-https-url"&gt;iphone development: verify the certificate information from a https url&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/wangsifu2009/article/details/6723267"&gt;Openssl 对x509证书有效性进行验证&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;暂时先用内嵌ca证书来解决对服务器x509证书的校验吧。&lt;/p&gt;</summary></entry><entry><title>Read From the programmer to project manager</title><link href="http://blog.chenghu.me/read-from-the-programmer-to-project-manager.html" rel="alternate"></link><updated>2015-03-14T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-14:read-from-the-programmer-to-project-manager.html</id><summary type="html">&lt;h1&gt;读《从程序员到项目经理》笔记&lt;/h1&gt;
&lt;h2&gt;从程序员到项目经理（一）&lt;/h2&gt;
&lt;p&gt;&lt;a href="从程序员到项目经理（一）"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么要当项目经理 － 职业晋升的一条渠道&lt;/li&gt;
&lt;li&gt;促进心智成熟&lt;/li&gt;
&lt;li&gt;项目管理知识可以通用到其他方面&lt;/li&gt;
&lt;li&gt;项目管理难就难在项目经理要改变自己，要学会跟人打交道&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2&gt;从程序员到项目经理（二）&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/watsonyin/archive/2012/09/16/2687873.html"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为什么是我 － 应为我更优秀一点&lt;/li&gt;
&lt;li&gt;光环效应 － 当我们对一个人某个方面有好的印象时，我们会倾向于认为他的其他方面也是好的&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;角色转换 － 本质上是思维转换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂时的不胜任不要紧，关键是要有进步。如果一个项目下来，除了很疲惫，你没有感觉到自己有一些积极的变化，那你的危机也要来了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;项目经理应该学会感恩。要成为优秀的项目经理，应该有好的心态，而感恩是一切好心态的基础。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;比较方面&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;技术思维&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;管理思维&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;关注中心&lt;/td&gt;
&lt;td&gt;以过程为中心的思维&lt;/td&gt;
&lt;td&gt;关心每项任务本身，而不是整体目标。不重视计划，对任务缺乏控制。&lt;/td&gt;
&lt;td&gt;以目标为中心的思维&lt;/td&gt;
&lt;td&gt;以终为始。关注整体目标、实现的路线、影响目标实现的因素、各种事件对目标的影响，区分重点。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;事物结构&lt;/td&gt;
&lt;td&gt;局部思维&lt;/td&gt;
&lt;td&gt;过于关注细节，对整个项目工作的内容、完成路线没有概念。上来就干，工作缺乏计划性、条理性。&lt;/td&gt;
&lt;td&gt;整体思维&lt;/td&gt;
&lt;td&gt;采用结构化分析方法，自顶向下，先整体后局部。有时亦采用头脑风暴，先将细节展开再归纳。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;逻辑思维&lt;/td&gt;
&lt;td&gt;以机器为中心的思维&lt;/td&gt;
&lt;td&gt;思想单纯，性格直率。在人际问题上过于讲究逻辑。&lt;/td&gt;
&lt;td&gt;以人为中心的思维&lt;/td&gt;
&lt;td&gt;人是执行项目的主体，关注事情本身，更关注人的价值。学会包容，能与各种不同情格的人打交道。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;决策依据&lt;/td&gt;
&lt;td&gt;完美思维&lt;/td&gt;
&lt;td&gt;不关心进度和成本，只关心完美的功能和代码，并视之为艺术。经常对上一任的工作推倒重来。&lt;/td&gt;
&lt;td&gt;平衡思维&lt;/td&gt;
&lt;td&gt;拒绝渡金，项目不需要艺术。在进度和质量之间取得平衡，在员工个性与团队凝聚力之间取得平衡，在员工、项目、公司和客户之间取得平衡。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;人际关系&lt;/td&gt;
&lt;td&gt;个人思维&lt;/td&gt;
&lt;td&gt;以个人为中心，单兵作战，依赖个人能力。个性固执，工作方法简单。&lt;/td&gt;
&lt;td&gt;团队思维&lt;/td&gt;
&lt;td&gt;你不是一个人在战斗，发挥每个成员的作用比个人埋头苦干重要得多。关注团队分工、配合以及士气和凝聚力。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h2&gt;从程序员到项目经理（三）：认识项目经理&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.cnblogs.com/watsonyin/archive/2012/09/25/2701483.html"&gt;地址&lt;/a&gt;&lt;/p&gt;</summary><category term="Programmer"></category><category term="PM"></category></entry><entry><title>Fixed Linode Error</title><link href="http://blog.chenghu.me/fixed-linode-error.html" rel="alternate"></link><updated>2015-03-13T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-13:fixed-linode-error.html</id><summary type="html">&lt;h1&gt;修复Linode error&lt;/h1&gt;
&lt;p&gt;今天ss老是报错误&lt;code&gt;ERROR: remote_recv_cb_recv: Connection reset by peer&lt;/code&gt;，ssh上不去。&lt;/p&gt;
&lt;p&gt;就重启了一下Linode，结果就ssh过不去了，ss也没有好。悲剧了&lt;/p&gt;
&lt;p&gt;登录Linode后台，发现CPU老100%，不知道哪里的事情，关键ssh进不去，着急。&lt;/p&gt;
&lt;p&gt;没办法，只好写Ticket找技术人员帮忙。&lt;/p&gt;
&lt;p&gt;用蹩脚的英文描述了半天，对方实在不理解，总是几句标准客服回复，估计那边的技术还没上班，客服在扛着。&lt;/p&gt;
&lt;p&gt;看来只能自己动手了&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Dashboard&lt;/code&gt;中查找有用的东西&lt;/p&gt;
&lt;p&gt;看到&lt;code&gt;Remote access&lt;/code&gt;中发现了&lt;code&gt;Console Access&lt;/code&gt;点击发现是一个web版的console&lt;/p&gt;
&lt;p&gt;看到我前两天搭建的&lt;code&gt;ocserv&lt;/code&gt;在处理一个ca证书，然后就没有然后了，输入啥都不行&lt;/p&gt;
&lt;p&gt;看来是&lt;code&gt;ocserv&lt;/code&gt;出了问题，没办法，再找找吧&lt;/p&gt;
&lt;p&gt;看到一个&lt;code&gt;Rescue&lt;/code&gt;选项卡，进去还有一个&lt;code&gt;Reboot into Rescue Mode&lt;/code&gt;的按钮，看来是进安全模式&lt;/p&gt;
&lt;p&gt;那就试试呗&lt;/p&gt;
&lt;p&gt;进去后还是一个linux系统，但进了&lt;code&gt;/etc&lt;/code&gt;下查看&lt;code&gt;rc.local&lt;/code&gt;发现是一个干净的rc，不是我系统里的那个文件&lt;/p&gt;
&lt;p&gt;google 一下这个linux系统了&lt;code&gt;Finnix&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;刚好遇到一个10年的帖子，也是用&lt;code&gt;Finnix&lt;/code&gt;这个系统再linode中恢复数据，&lt;a href="http://www.chinaz.com/web/2010/1112/142756.shtml"&gt;帖子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看了下，大体了解了，原来这个&lt;code&gt;Finnix&lt;/code&gt;系统，就想Win下的PE系统，可以直接访问硬盘的文件，但是，需要先挂载硬盘&lt;/p&gt;
&lt;p&gt;那就好说了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /mnt/linode
mount /dev/xvda /mnt/linode
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后去修改&lt;code&gt;rc.local&lt;/code&gt;把，&lt;code&gt;ocserv&lt;/code&gt;启动行注释掉，保存，重启。&lt;/p&gt;
&lt;p&gt;在web console 中看到登录框，但在本地还是ssh不上去&lt;/p&gt;
&lt;p&gt;好吧，先在web console中输出一下iptables &lt;code&gt;sudo iptables -nL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;＝。＝&lt;/p&gt;
&lt;p&gt;原来Input链全部&lt;code&gt;DROP&lt;/code&gt;了&lt;/p&gt;
&lt;p&gt;改改改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;iptables -A INPUT -j ACCEPT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后再ssh就通了&lt;/p&gt;
&lt;p&gt;然后去修改了启动默认加载的iptables ruls文件&lt;/p&gt;
&lt;p&gt;附&lt;/p&gt;
&lt;p&gt;ubuntu 的启动默认iptables导入的文件在&lt;code&gt;/etc/network/if-pre-up.d/iptables&lt;/code&gt;这个目录下，备忘。&lt;/p&gt;
&lt;p&gt;PS：&lt;/p&gt;
&lt;p&gt;后来还是启动了&lt;code&gt;ocserv&lt;/code&gt;，原来不是操作卡住了，只是这个程序运行起来只在输出状态，不能做输入操作。&lt;/p&gt;
&lt;p&gt;附加几个iptable操作的教程&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lesca.me/archives/iptables-architecture-commands-extensions.html"&gt;iptables入门：iptables构架、基本命令及扩展（功能）简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.51yip.com/linux/1404.html"&gt;iptables 添加，删除，查看，修改&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.csdn.net/test_me/article/details/5572195"&gt;iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://xiaozhuang.blog.51cto.com/4396589/874244"&gt;linux防火墙基础和管理设置iptables规则&lt;/a&gt;&lt;/p&gt;</summary><category term="Linode"></category><category term="Error"></category></entry><entry><title>Kill Mac QQ Capture Function</title><link href="http://blog.chenghu.me/kill-mac-qq-capture-function.html" rel="alternate"></link><updated>2015-03-13T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-13:kill-mac-qq-capture-function.html</id><summary type="html">&lt;h1&gt;干掉Mac QQ的自动截图程序&lt;/h1&gt;
&lt;p&gt;今天安装了Mac的企业QQ&lt;/p&gt;
&lt;p&gt;但在使用Mail的时候发现同时按&lt;code&gt;commond+control+a&lt;/code&gt;进行归档邮件的时候&lt;/p&gt;
&lt;p&gt;居然弹出QQ的截图程序，烦躁&lt;/p&gt;
&lt;p&gt;最讨厌其他程序抢占系统的快捷键，而且Mac本身的截图就很好用了&lt;/p&gt;
&lt;p&gt;准备搞掉Mac QQ的截图程序。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Activity Monitor&lt;/code&gt;中盲搜了一下&lt;code&gt;Capture&lt;/code&gt;，果然发现两个进程&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ScreenCaptureEIM
Image Capture Extension
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之前安装企业QQ的时候记得就叫EIM QQ&lt;/p&gt;
&lt;p&gt;好吧，那估计就是那个&lt;code&gt;ScreenCaptureEIM&lt;/code&gt;进程了，果断&lt;code&gt;kill&lt;/code&gt;掉，居然又启动了&lt;/p&gt;
&lt;p&gt;好吧，看来是加载了后台自启动，看一下&lt;code&gt;launchctl list&lt;/code&gt;，果然有&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;com.tencent.ScreenCaptureEIM
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;先关掉自启动吧&lt;code&gt;launchctl stop com.tencent.ScreenCaptureEIM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;Activity Monitor&lt;/code&gt;中看一下&lt;code&gt;ScreenCaptureEIM&lt;/code&gt;进程的信息，看到下面一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/Applications/EIM.app/Contents/Library/LoginItems/ScreenCaptureEIM.app/Contents/MacOS/ScreenCaptureEIM
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看来程序本体在&lt;code&gt;/Applications/EIM.app/Contents/Library/LoginItems/&lt;/code&gt;，进去删掉，然后kill掉进程，哈哈，一切都清净了。&lt;/p&gt;</summary><category term="Mac"></category><category term="QQ"></category><category term="Capture"></category></entry><entry><title>Fixed SVN did not show histoy Error</title><link href="http://blog.chenghu.me/fixed-svn-did-not-show-histoy-error.html" rel="alternate"></link><updated>2015-03-11T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-03-11:fixed-svn-did-not-show-histoy-error.html</id><summary type="html">&lt;h1&gt;修复SVN 不显示Timeline的bug&lt;/h1&gt;
&lt;p&gt;之前在Linode上搭建了Svn server&lt;br&gt;
但总是不能用客户端看到提交的Timeline&lt;br&gt;
郁闷&lt;br&gt;
今天决定搞掉这个bug&lt;br&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;Revert to Revision&lt;/code&gt;结果现实了 &lt;code&gt;Unreadable path encountered; access denied;&lt;/code&gt;这个错误。&lt;/p&gt;
&lt;p&gt;google了一下这个bug，找到一篇文章，&lt;a href="http://haitao.iteye.com/blog/1440066"&gt;原文在这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;发现是Server的配置出了问题。&lt;/p&gt;
&lt;p&gt;ssh上去找到SVN的目录下的&lt;code&gt;conf/svnserve.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;code&gt;anon-access = none&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后重启SVN Server就好了&lt;/p&gt;</summary><category term="SVN"></category><category term="Error"></category></entry><entry><title>Fixed Cocoapods Error</title><link href="http://blog.chenghu.me/fixed-cocoapods-error.html" rel="alternate"></link><updated>2015-02-15T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2015-02-15:fixed-cocoapods-error.html</id><summary type="html">&lt;h1&gt;修复Cocoapods error&lt;/h1&gt;
&lt;p&gt;今天使用&lt;code&gt;pod update&lt;/code&gt;更新所有框架，结果提示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Update all pods
Analyzing dependencies
[!] There was an error reading &amp;#39;/Users/xxxxx/.cocoapods/repos/master/CocoaPods-version.yml&amp;#39;.
Please consult http://blog.cocoapods.org/Repairing-Our-Broken-Specs-Repository/ for more information.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;找了好多方法，也试了好多
终于找到了原因
记录一下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo rm -fr ~/.cocoapods/repos/master
sudo gem uninstall cocoapods
sudo gem update
sudo gem uninstall psych
sudo gem install psych -v 2.0.0
sudo gem instal cocoapods
pod setup
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就ok了&lt;/p&gt;</summary><category term="Cocoapods"></category><category term="Error"></category></entry><entry><title>Hook Reveal Regiest Alert</title><link href="http://blog.chenghu.me/hook-reveal-regiest-alert.html" rel="alternate"></link><updated>2014-10-21T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2014-10-21:hook-reveal-regiest-alert.html</id><summary type="html">&lt;p&gt;之前写了  &lt;a href="http://www.yangch.info/?p=1230"&gt;“破解Reveal购买提示框”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;近期发现 Reveal 更新到了1.0.6版本&lt;/p&gt;
&lt;p&gt;感觉每次都修改二进制文件，要计算位置，再去修改那个字节 都比较麻烦。&lt;/p&gt;
&lt;p&gt;在想在Mac平台上有没有像iOS下theos框架一样的hook的插件平台。&lt;/p&gt;
&lt;p&gt;后来想起来，theos也是用&lt;code&gt;runtime&lt;/code&gt;来动态替换了方法。&lt;/p&gt;
&lt;h2&gt;创建工程&lt;/h2&gt;
&lt;p&gt;在Xcode创建工程，选择&lt;code&gt;Library&lt;/code&gt;。&lt;/p&gt;</summary><category term="Hook"></category><category term="Mac"></category><category term="Reveal"></category></entry><entry><title>博客迁移(WP-&gt;Pelican)</title><link href="http://blog.chenghu.me/bo-ke-qian-yi-wp-pelican.html" rel="alternate"></link><updated>2014-09-09T00:00:00+08:00</updated><author><name>小虎</name></author><id>tag:blog.chenghu.me,2014-09-09:bo-ke-qian-yi-wp-pelican.html</id><summary type="html">&lt;p&gt;今天心血来潮，想把自己在wordpress上的&lt;a href="http://www.yangch.info"&gt;博客&lt;/a&gt;迁移到刚刚用pelican在github上搭建好&lt;a href="http://blog.chenghu.me"&gt;新博客&lt;/a&gt;，折腾了一下午，记录了一下过程。&lt;/p&gt;
&lt;h2&gt;将博客文章从wordpress导出xml文件&lt;/h2&gt;
&lt;p&gt;进入wordpress后台，选择&lt;code&gt;工具&lt;/code&gt; -&amp;gt; &lt;code&gt;导出&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这里要注意的是，如果文章多，或者评论多的话，最好根据年份或者根据分类来导出文章，这样文件较小，后面各种处理都比较方便。&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;将博客里面的图片下载到本地&lt;/h2&gt;
&lt;p&gt;这里使用了&lt;a href="http://zoomquiet.io/"&gt;zoomquiet&lt;/a&gt;大妈的一个脚本（修改了两个地方：添加了异常处理，由于有些图片的地址已经失效，容易读取失败；添加了网络超时处理）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding=utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;codecs&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;

&lt;span class="c"&gt;# 打开RSS文件读取内容&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;codecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;wordpress.2014.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 用正则从RSS中提取所有图片链接地址&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;src=&amp;quot;([\w\W]+?)&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 下载图片文件，并保存到img目录&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="n"&gt;opener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opener&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;newname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rfind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;newname&lt;/span&gt; 
        &lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;./img/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;newname&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; image download fail&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
    &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;将图片上传到七牛&lt;/h2&gt;
&lt;p&gt;参考&lt;a href="http://developer.qiniu.com/docs/v6/tools/qrsync.html"&gt;七牛文档&lt;/a&gt;，配置&lt;code&gt;conf.json&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;然后执行 &lt;code&gt;qrsync /path/to/your-conf.json&lt;/code&gt;，会将图片上传到七牛&lt;/p&gt;
&lt;h2&gt;替换xml中图片的url&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#coding=utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="c"&gt;# 这里修改成自己的空间地址&lt;/span&gt;
&lt;span class="n"&gt;strbucketurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://bucket.qiniudn.com/&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# 打开RSS文件读取内容&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wordpress.2014.xml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 用正则从RSS中提取所有图片链接地址&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;(http:.*?\.(jpg|png))&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;

&lt;span class="n"&gt;iCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c"&gt;# 替换所有url&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;arrlist&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arrlist&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;newname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rfind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="n"&gt;newurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strbucketurl&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;newname&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;newurl&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;------------&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;iCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iCount&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newurl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;change url count:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;iCount&lt;/span&gt;

&lt;span class="n"&gt;outputfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;new2013.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outputfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outputfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意：执行上面脚本记得修改成自己的bucket地址！！！&lt;/p&gt;
&lt;h2&gt;将xml转换成markdown格式&lt;/h2&gt;
&lt;p&gt;这一步比较复杂，自己也折腾了好久，踩了好多坑，参考了&lt;a href="http://xdays.info/Pelican%E5%92%8CGithub%E6%9E%84%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html"&gt;xdays&lt;/a&gt; 的文章&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;code&gt;BeautifulSoup4&lt;/code&gt;和 &lt;code&gt;lxml&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install BeautifulSoup4  lxml
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;code&gt;pandoc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew install pandoc
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入blog目录，将xml文件装换成markdown格式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;wpfile&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;new2012&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行以下脚本，将markdown的文件名unquote成字符串：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python changeMDname.py ./tmp ./content/cat/&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unquote&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;flist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)],[])&lt;/span&gt;

&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;flist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readlines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Slug&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unquote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
                &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.md&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;然后就可以发布blog了&lt;/h2&gt;
&lt;p&gt;所用到的脚本可以在&lt;a href="https://github.com/yangchenghu/convertWP2Pelican"&gt;这里&lt;/a&gt;下载&lt;/p&gt;
&lt;h2&gt;参考：&lt;/h2&gt;
&lt;p&gt;&lt;a href="floss.zoomquiet.io/data/20121221103448/index.html"&gt;迁移SAE wordpress的图片到jekyll&lt;/a&gt;  - 注：已经打不开了，参考的&lt;a href="http://webcache.googleusercontent.com/search?q=cache:Cdd-FI1a50oJ:floss.zoomquiet.io/data/20121221103448/index.html+&amp;amp;cd=1&amp;amp;hl=en&amp;amp;ct=clnk&amp;amp;gl=jp"&gt;google快照&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://xdays.info/Pelican%E5%92%8CGithub%E6%9E%84%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2.html"&gt;Pelican和Github构建静态博客&lt;/a&gt;&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="WordPress"></category></entry></feed>